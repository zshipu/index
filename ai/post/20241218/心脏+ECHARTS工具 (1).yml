app:
  description: 智能健康数据分析和咨询助手
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: 心脏+ECHARTS工具
  use_icon_as_answer_icon: false
kind: app
version: 0.1.3
workflow:
  conversation_variables:
  - description: ''
    id: 8780f6c1-6b64-42ea-8540-7952844131d9
    name: mem
    selector: []
    value: ''
    value_type: string
  environment_variables:
  - description: ''
    id: 1f6bdf05-f654-4a51-b2bd-1046eaf18e04
    name: echarts
    selector: []
    value: 1. 折线图（Line Chart）模板，适用场景：适用于对比不同类别的数值大小，如一周内每天的销售额、不同产品的销量等。 {"xAxis":{"type":"category","data":["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]},"yAxis":{"type":"value"},"series":[{"data":[820,932,901,934,1290,1330,1320],"type":"line","smooth":true,"lineStyle":{"width":2,"color":"#5470C6"},"areaStyle":{"color":"rgba(84,
      112, 198, 0.2)"}}]}   2. 饼图（Pie Chart）模板，适用场景：适用于分析趋势变化，如时间序列数据（如温度变化、股价走势）或数据的波动情况。
      {"tooltip":{"trigger":"item"},"legend":{"top":"5%","left":"center"},"series":[{"name":"Access
      From","type":"pie","radius":["40%","70%"],"avoidLabelOverlap":false,"itemStyle":{"borderRadius":10,"borderColor":"#fff","borderWidth":2},"label":{"show":false,"position":"center"},"emphasis":{"label":{"show":true,"fontSize":"20","fontWeight":"bold"}},"labelLine":{"show":false},"data":[{"value":1048,"name":"Search
      Engine"},{"value":735,"name":"Direct"},{"value":580,"name":"Email"},{"value":484,"name":"Union
      Ads"},{"value":300,"name":"Video Ads"}]}]}   3. 散点图（Scatter Plot）模板，适用场景：适用于显示不同部分在整体中的占比，如市场份额、预算分配等。
      {"xAxis":{"type":"value"},"yAxis":{"type":"value"},"series":[{"symbolSize":20,"data":[[10.0,8.04],[8.07,6.95],[13.0,7.58],[9.05,8.81],[11.0,8.33],[14.0,9.96],[6.08,7.24],[4.08,4.26]],"type":"scatter","itemStyle":{"color":"#91CC75"}}]}   4.
      堆叠柱状图（Stacked Bar Chart）模板，适用场景：适用于显示两变量之间的关系，如收入和支出之间的关系、体重与身高的关系等。 {"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{},"xAxis":{"type":"category","data":["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]},"yAxis":{"type":"value"},"series":[{"name":"Direct","type":"bar","stack":"total","data":[320,302,301,334,390,330,320],"itemStyle":{"color":"#5470C6"}},{"name":"Email","type":"bar","stack":"total","data":[120,132,101,134,90,230,210],"itemStyle":{"color":"#91CC75"}},{"name":"Union
      Ads","type":"bar","stack":"total","data":[220,182,191,234,290,330,310],"itemStyle":{"color":"#EE6666"}},{"name":"Video
      Ads","type":"bar","stack":"total","data":[150,212,201,154,190,330,410],"itemStyle":{"color":"#73C0DE"}}]}  5.
      雷达图（Radar Chart）模板，适用场景：适合展示总量构成及不同部分的变化情况，如产品各渠道的销量，或年度支出中各部门的占比。 {"tooltip":{"trigger":"item"},"legend":{"data":["Allocated
      Budget","Actual Spending"]},"radar":{"indicator":[{"name":"Sales","max":6500},{"name":"Administration","max":16000},{"name":"Information
      Tech","max":30000},{"name":"Customer Support","max":38000},{"name":"Development","max":52000},{"name":"Marketing","max":25000}]},"series":[{"name":"Budget
      vs spending","type":"radar","data":[{"value":[4200,3000,20000,35000,50000,18000],"name":"Allocated
      Budget"},{"value":[5000,14000,28000,26000,42000,21000],"name":"Actual Spending"}]}]}
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: 欢迎
    retriever_resource:
      enabled: false
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions:
    - 最近跑步心率跳动有点下降
    - 查询下我的ST段指标数据怎么样
    - 最近一周心率大于83的占比多少
    suggested_questions_after_answer:
      enabled: true
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 1731926006386-source-1731926118154-target
      source: '1731926006386'
      sourceHandle: source
      target: '1731926118154'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1731926118154-source-1731926964394-target
      source: '1731926118154'
      sourceHandle: source
      target: '1731926964394'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: question-classifier
      id: 1731924006269-source-1731925753065-target
      source: '1731924006269'
      sourceHandle: source
      target: '1731925753065'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 17319298665820-source-17319298903250-target
      source: '17319298665820'
      sourceHandle: source
      target: '17319298903250'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 17319298903250-source-17319299199320-target
      source: '17319298903250'
      sourceHandle: source
      target: '17319299199320'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 1731930618726-source-1731925900737-target
      source: '1731930618726'
      sourceHandle: source
      target: '1731925900737'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17319299199320-source-1731930618726-target
      source: '17319299199320'
      sourceHandle: source
      target: '1731930618726'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1731926964394-source-17319986184780-target
      source: '1731926964394'
      sourceHandle: source
      target: '17319986184780'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 17319986184780-source-17319986211340-target
      source: '17319986184780'
      sourceHandle: source
      target: '17319986211340'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1731999723159-source-1731925842705-target
      source: '1731999723159'
      sourceHandle: source
      target: '1731925842705'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 17319298665820-source-1731995198698-target
      source: '17319298665820'
      sourceHandle: source
      target: '1731995198698'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: assigner
      id: 1731925842705-source-1732003311390-target
      source: '1731925842705'
      sourceHandle: source
      target: '1732003311390'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: assigner
      id: 1731995198698-source-1732003436027-target
      source: '1731995198698'
      sourceHandle: source
      target: '1732003436027'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 1732003436027-source-1731925900737-target
      source: '1732003436027'
      sourceHandle: source
      target: '1731925900737'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: assigner
      id: 1731998763527-source-1732003449762-target
      source: '1731998763527'
      sourceHandle: source
      target: '1732003449762'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 1732003449762-source-17319986211340-target
      source: '1732003449762'
      sourceHandle: source
      target: '17319986211340'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 1732003311390-source-1731995001498-target
      source: '1732003311390'
      sourceHandle: source
      target: '1731995001498'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 1731926006386-source-1731998763527-target
      source: '1731926006386'
      sourceHandle: source
      target: '1731998763527'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: template-transform
      id: 1731925753065-1-1731926006386-target
      source: '1731925753065'
      sourceHandle: '1'
      target: '1731926006386'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: knowledge-retrieval
      id: 1731925753065-1733973168193-1731999723159-target
      source: '1731925753065'
      sourceHandle: '1733973168193'
      target: '1731999723159'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: template-transform
      id: 1731925753065-2-17319298665820-target
      source: '1731925753065'
      sourceHandle: '2'
      target: '17319298665820'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 17339734370280-source-17339735115310-target
      source: '17339734370280'
      sourceHandle: source
      target: '17339735115310'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 17339735115310-source-17339735486370-target
      source: '17339735115310'
      sourceHandle: source
      target: '17339735486370'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 17339735486370-source-17339735717880-target
      source: '17339735486370'
      sourceHandle: source
      target: '17339735717880'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 17339735717880-source-17339735995070-target
      source: '17339735717880'
      sourceHandle: source
      target: '17339735995070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 17339734370280-source-17339736402840-target
      source: '17339734370280'
      sourceHandle: source
      target: '17339736402840'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: assigner
      id: 17339736402840-source-17339736659070-target
      source: '17339736402840'
      sourceHandle: source
      target: '17339736659070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: assigner
        targetType: answer
      id: 17339736659070-source-17339735995070-target
      source: '17339736659070'
      sourceHandle: source
      target: '17339735995070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: question-classifier
        targetType: template-transform
      id: 1731925753065-1731927578715-17339734370280-target
      source: '1731925753065'
      sourceHandle: '1731927578715'
      target: '17339734370280'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables:
        - label: 用户ID
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: managerUuid
        - label: data
          max_length: 200
          options: []
          required: true
          type: text-input
          variable: data
        - label: dataName
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: dataName
      height: 142
      id: '1731924006269'
      position:
        x: 30
        y: 324
      positionAbsolute:
        x: 30
        y: 324
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        classes:
        - id: '1'
          name: 识别是心率数据
        - id: '2'
          name: 识别是ST段数据
        - id: '1731927578715'
          name: 识别是套餐数据
        - id: '1733973168193'
          name: 其他数据
        desc: ''
        instruction: ''
        instructions: ''
        memory:
          query_prompt_template: ''
          window:
            enabled: true
            size: 11
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        query_variable_selector:
        - '1731924006269'
        - dataName
        selected: true
        title: 问题分类器
        topics: []
        type: question-classifier
        vision:
          enabled: false
      height: 248
      id: '1731925753065'
      position:
        x: 334
        y: 324
      positionAbsolute:
        x: 334
        y: 324
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1731999723159'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:1.5b
          provider: ollama
        prompt_template:
        - id: 8d80de37-5e27-467c-aa86-40fc44ac594c
          role: system
          text: 学习知识库 <database>{{#context#}}</database> ，回答用户问题
        - id: 40bcaa43-b80b-40cd-a40b-f0248bf6d9ad
          role: user
          text: '{{#sys.query#}}'
        selected: false
        title: 直接回答
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '1731925842705'
      position:
        x: 942
        y: 614
      positionAbsolute:
        x: 942
        y: 614
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1731995198698.text#}}


          {{#1731930618726.result#}}

          '
        desc: ''
        selected: false
        title: 最终回复
        type: answer
        variables: []
      height: 120
      id: '1731925900737'
      position:
        x: 1854
        y: 755
      positionAbsolute:
        x: 1854
        y: 755
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "用户ID: {{ userId }}\r\n查询用户心率数据，上一周7天平均心率：\r\n{{ data }}\r\n"
        title: 调用用户心率查询工具
        type: template-transform
        variables:
        - value_selector:
          - '1731924006269'
          - managerUuid
          variable: userId
        - value_selector:
          - '1731924006269'
          - data
          variable: data
      height: 54
      id: '1731926006386'
      position:
        x: 638
        y: 324
      positionAbsolute:
        x: 638
        y: 324
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - env
          - echarts
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: 0512eaa5-8b8d-46e1-830e-17d44fbcd95f
          role: system
          text: 请先学习{{#context#}}中的模板知识，并充分理解每种模板适用的场景。
        - id: 0ea55c34-66ea-413c-abfb-6633d2cc9747
          role: user
          text: '根据用户数据：《{{#1731926006386.output#}}》 和 用户问题：《{{#sys.query#}}》，并根据问题列举出数据支撑你的观点，自己收集，并替换掉模板内的标题和数据，结合echarts配置分析用哪种配置比较合适，就输出哪种配置，注意：echarts
            配置需要使用下面格式包裹输出。 只需要 echarts 配置片段。请把你收集的数据，替换掉配置模板中的数据。

            注意只输出 echarts 配置代码片段'
        - id: 77a324dd-238f-4ac5-96a5-93d80a5e725d
          role: assistant
          text: '```echarts

            {echarts 配置代码}

            ```'
        selected: false
        title: 心率echarts配置
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '1731926118154'
      position:
        x: 942
        y: 324
      positionAbsolute:
        x: 942
        y: 324
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1.replace(\"\
          ```json\",\"```echarts\").replace(\"```yaml\",\"```echarts\").replace(\"\
          json\\n\",\"```echarts\").replace(\"```javascript\",\"```echarts\"),\n \
          \   }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 格式化心率echarts配置
        type: code
        variables:
        - value_selector:
          - '1731926118154'
          - text
          variable: arg1
      height: 54
      id: '1731926964394'
      position:
        x: 1246
        y: 324
      positionAbsolute:
        x: 1246
        y: 324
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "用户ID: {{ userId }}\r\n查询用户ST段数据，上一周7天平均ST段：\r\n{{ data }}\r\n"
        title: 调用用户ST查询工具
        type: template-transform
        variables:
        - value_selector:
          - '1731924006269'
          - managerUuid
          variable: userId
        - value_selector:
          - '1731924006269'
          - data
          variable: data
      height: 54
      id: '17319298665820'
      position:
        x: 638
        y: 755
      positionAbsolute:
        x: 638
        y: 755
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - env
          - echarts
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: 0512eaa5-8b8d-46e1-830e-17d44fbcd95f
          role: system
          text: 请先学习{{#context#}}中的模板知识，并充分理解每种模板适用的场景。
        - id: 0ea55c34-66ea-413c-abfb-6633d2cc9747
          role: user
          text: '根据用户数据：《{{#17319298665820.output#}}》 和 用户问题：《{{#sys.query#}}》，并根据问题列举出数据支撑你的观点，自己收集，并替换掉模板内的标题和数据，结合echarts配置分析用哪种配置比较合适，就输出哪种配置，注意：echarts
            配置需要使用下面格式包裹输出。 只需要 echarts 配置片段。请把你收集的数据，替换掉配置模板中的数据。

            注意只输出 echarts 配置代码片段'
        - id: 77a324dd-238f-4ac5-96a5-93d80a5e725d
          role: assistant
          text: '```echarts

            {echarts 配置代码}

            ```'
        selected: false
        title: ST段echarts配置
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '17319298903250'
      position:
        x: 942
        y: 755
      positionAbsolute:
        x: 942
        y: 755
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1.replace(\"\
          ```json\",\"```echarts\").replace(\"```yaml\",\"```echarts\").replace(\"\
          json\\n\",\"```echarts\").replace(\"```javascript\",\"```echarts\"),\n \
          \   }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 格式化ST段echarts配置
        type: code
        variables:
        - value_selector:
          - '17319298903250'
          - text
          variable: arg1
      height: 54
      id: '17319299199320'
      position:
        x: 1246
        y: 755
      positionAbsolute:
        x: 1246
        y: 755
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": \"\
          您可用套餐有：\\n\" + arg1+\"\\n\",\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 拼接数据用语-套餐
        type: code
        variables:
        - value_selector:
          - '17319299199320'
          - result
          variable: arg1
      height: 54
      id: '1731930618726'
      position:
        x: 1550
        y: 755
      positionAbsolute:
        x: 1550
        y: 755
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1731925842705.text#}}'
        desc: ''
        selected: false
        title: 直接回复 2
        type: answer
        variables: []
      height: 102
      id: '1731995001498'
      position:
        x: 1550
        y: 590
      positionAbsolute:
        x: 1550
        y: 590
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '17319298665820'
          - output
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: e2e46bfb-fecb-4424-85e1-2fed6141b235
          role: system
          text: 分析用户数据 {{#context#}}
        - id: 44d25780-7776-47da-835c-f13dcf2f9f24
          role: user
          text: '{{#sys.query#}}'
        selected: false
        title: LLM 4
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '1731995198698'
      position:
        x: 1246
        y: 866
      positionAbsolute:
        x: 1246
        y: 866
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": \"\
          您最近的数据走势：\\n\" + arg1+\"\\n\",\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 拼接数据用语-心率
        type: code
        variables:
        - value_selector:
          - '1731926964394'
          - result
          variable: arg1
      height: 54
      id: '17319986184780'
      position:
        x: 1550
        y: 324
      positionAbsolute:
        x: 1550
        y: 324
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1731998763527.text#}}


          {{#17319986184780.result#}}

          '
        desc: ''
        selected: false
        title: 最终回复 (1)
        type: answer
        variables: []
      height: 120
      id: '17319986211340'
      position:
        x: 1854
        y: 324
      positionAbsolute:
        x: 1854
        y: 324
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1731926006386'
          - output
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: 0179e052-0172-4427-a92c-dfc38d9770b2
          role: system
          text: 分析用户数据 {{#context#}}
        - id: 8784c00c-6831-4838-a389-fd8f8948b3e1
          role: user
          text: '{{#sys.query#}}'
        selected: false
        title: LLM 5
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '1731998763527'
      position:
        x: 1224.5714285714287
        y: 457.8571428571429
      positionAbsolute:
        x: 1224.5714285714287
        y: 457.8571428571429
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - 6bdf4e0e-1e4f-4175-b708-c9ee3feea99a
        - 9ccdae01-8a13-48c1-9b58-e75626cb703f
        - 5abbdf72-1422-4608-8b43-d0a11de16d34
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: reranking_model
          reranking_model:
            model: bge-reranker-v2-m3
            provider: xinference
          score_threshold: null
          top_k: 4
          weights:
            keyword_setting:
              keyword_weight: 0.3
            vector_setting:
              embedding_model_name: bge-m3
              embedding_provider_name: xinference
              vector_weight: 0.7
        query_variable_selector:
        - '1731924006269'
        - sys.query
        retrieval_mode: multiple
        selected: false
        title: 知识检索
        type: knowledge-retrieval
      height: 148
      id: '1731999723159'
      position:
        x: 638
        y: 567
      positionAbsolute:
        x: 638
        y: 567
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - mem
        desc: ''
        input_variable_selector:
        - '1731925842705'
        - text
        selected: false
        title: 变量赋值
        type: assigner
        write_mode: over-write
      height: 132
      id: '1732003311390'
      position:
        x: 1246
        y: 575
      positionAbsolute:
        x: 1246
        y: 575
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - mem
        desc: ''
        input_variable_selector:
        - '1731995198698'
        - text
        selected: false
        title: 变量赋值 2
        type: assigner
        write_mode: over-write
      height: 132
      id: '1732003436027'
      position:
        x: 1550
        y: 849
      positionAbsolute:
        x: 1550
        y: 849
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - mem
        desc: ''
        input_variable_selector:
        - '1731998763527'
        - text
        selected: false
        title: 变量赋值 3
        type: assigner
        write_mode: over-write
      height: 132
      id: '1732003449762'
      position:
        x: 1550
        y: 418
      positionAbsolute:
        x: 1550
        y: 418
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "用户ID: {{ userId }}\r\n查询用户套餐数据，用户当前可用套餐：\r\n{{ data }}\r\n"
        title: 调用用户套餐查询工具
        type: template-transform
        variables:
        - value_selector:
          - '1731924006269'
          - managerUuid
          variable: userId
        - value_selector:
          - '1731924006269'
          - data
          variable: data
      height: 54
      id: '17339734370280'
      position:
        x: 638
        y: 1021
      positionAbsolute:
        x: 638
        y: 1021
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - env
          - echarts
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: 0512eaa5-8b8d-46e1-830e-17d44fbcd95f
          role: system
          text: 请先学习{{#context#}}中的模板知识，并充分理解每种模板适用的场景。
        - id: 0ea55c34-66ea-413c-abfb-6633d2cc9747
          role: user
          text: '根据用户数据：《{{#17319298665820.output#}}》 和 用户问题：《{{#sys.query#}}》，并根据问题列举出数据支撑你的观点，自己收集，并替换掉模板内的标题和数据，结合echarts配置分析用哪种配置比较合适，就输出哪种配置，注意：echarts
            配置需要使用下面格式包裹输出。 只需要 echarts 配置片段。请把你收集的数据，替换掉配置模板中的数据。

            注意只输出 echarts 配置代码片段'
        - id: 77a324dd-238f-4ac5-96a5-93d80a5e725d
          role: assistant
          text: '```echarts

            {echarts 配置代码}

            ```'
        selected: false
        title: 套餐echarts配置 (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '17339735115310'
      position:
        x: 942
        y: 1021
      positionAbsolute:
        x: 942
        y: 1021
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": arg1.replace(\"\
          ```json\",\"```echarts\").replace(\"```yaml\",\"```echarts\").replace(\"\
          json\\n\",\"```echarts\").replace(\"```javascript\",\"```echarts\"),\n \
          \   }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 格式化套餐echarts配置 (1)
        type: code
        variables:
        - value_selector:
          - '17319298903250'
          - text
          variable: arg1
      height: 54
      id: '17339735486370'
      position:
        x: 1246
        y: 1021
      positionAbsolute:
        x: 1246
        y: 1021
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    return {\n        \"result\": \"\
          您最近的数据走势：\\n\" + arg1+\"\\n\",\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 拼接数据用语-ST (1)
        type: code
        variables:
        - value_selector:
          - '17319299199320'
          - result
          variable: arg1
      height: 54
      id: '17339735717880'
      position:
        x: 1550
        y: 1021
      positionAbsolute:
        x: 1550
        y: 1021
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1731995198698.text#}}


          {{#1731930618726.result#}}

          '
        desc: ''
        selected: false
        title: 最终回复 (1)
        type: answer
        variables: []
      height: 102
      id: '17339735995070'
      position:
        x: 1854
        y: 1030
      positionAbsolute:
        x: 1854
        y: 1030
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '17319298665820'
          - output
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: qwen2.5:7b
          provider: ollama
        prompt_template:
        - id: e2e46bfb-fecb-4424-85e1-2fed6141b235
          role: system
          text: 分析用户数据 {{#context#}}
        - id: 44d25780-7776-47da-835c-f13dcf2f9f24
          role: user
          text: '{{#sys.query#}}'
        selected: false
        title: LLM 4 (1)
        type: llm
        variables: []
        vision:
          enabled: false
      height: 98
      id: '17339736402840'
      position:
        x: 1246
        y: 1132
      positionAbsolute:
        x: 1246
        y: 1132
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        assigned_variable_selector:
        - conversation
        - mem
        desc: ''
        input_variable_selector:
        - '1731995198698'
        - text
        selected: false
        title: 变量赋值 2 (1)
        type: assigner
        write_mode: over-write
      height: 132
      id: '17339736659070'
      position:
        x: 1550
        y: 1115
      positionAbsolute:
        x: 1550
        y: 1115
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 60.41830841986119
      y: -13.597497921591525
      zoom: 0.7000000000000012
