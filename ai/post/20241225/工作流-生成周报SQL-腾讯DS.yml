app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: 工作流-生成周报SQL-腾讯DS
  use_icon_as_answer_icon: false
kind: app
version: 0.1.3
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: start
        targetType: knowledge-retrieval
      id: 1736501786115-source-1736502814530-target
      source: '1736501786115'
      sourceHandle: source
      target: '1736502814530'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: end
      id: 1738924333315-source-1736502948698-target
      source: '1738924333315'
      sourceHandle: source
      target: '1736502948698'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1736502814530-source-1738993653777-target
      source: '1736502814530'
      sourceHandle: source
      target: '1738993653777'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: tool
      id: 1738993653777-source-1738993589371-target
      source: '1738993653777'
      sourceHandle: source
      target: '1738993589371'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: tool
        targetType: code
      id: 1738993589371-source-1738996359494-target
      source: '1738993589371'
      sourceHandle: source
      target: '1738996359494'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: code
      id: 1738996359494-source-1738924333315-target
      source: '1738996359494'
      sourceHandle: source
      target: '1738924333315'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables:
        - label: input
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: input
        - label: user_no
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: user_no
      height: 116
      id: '1736501786115'
      position:
        x: 30
        y: 258
      positionAbsolute:
        x: 30
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - 084c7b8d-625b-4eb8-ab75-b3440b2fb990
        desc: ''
        multiple_retrieval_config:
          reranking_enable: true
          reranking_mode: reranking_model
          reranking_model:
            model: bge-reranker-v2-m3
            provider: xinference
          top_k: 4
        query_variable_selector:
        - '1736501786115'
        - input
        retrieval_mode: multiple
        selected: false
        title: 知识检索
        type: knowledge-retrieval
      height: 92
      id: '1736502814530'
      position:
        x: 334
        y: 258
      positionAbsolute:
        x: 334
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1738924333315'
          - result
          variable: text
        selected: false
        title: 结束
        type: end
      height: 90
      id: '1736502948698'
      position:
        x: 1854
        y: 258
      positionAbsolute:
        x: 1854
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    separator = \"</think>\"\n    result\
          \ = arg1\n    # 判断分隔符是否存在\n    if separator in result:\n        result =\
          \ result.split(separator)[1]\n    result = result.replace(\"```json\", \"\
          \")\n    result = result.replace(\"```\", \"\")\n    return {\n        \"\
          result\": result,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行
        type: code
        variables:
        - value_selector:
          - '1738996359494'
          - result
          variable: arg1
      height: 54
      id: '1738924333315'
      position:
        x: 1550
        y: 258
      positionAbsolute:
        x: 1550
        y: 258
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        provider_id: a8eb924e-6785-4be7-875e-55f6f028b5a7
        provider_name: 腾讯DeepSeek
        provider_type: api
        selected: false
        title: createChatStream
        tool_configurations: {}
        tool_label: createChatStream
        tool_name: createChatStream
        tool_parameters:
          bot_app_key:
            type: mixed
            value: jyblvVSP
          content:
            type: mixed
            value: '{{#1738993653777.result#}}'
          session_id:
            type: mixed
            value: '{{#sys.workflow_run_id#}}'
          streaming_throttle:
            type: mixed
            value: '100000'
          visitor_biz_id:
            type: mixed
            value: test
        type: tool
      height: 54
      id: '1738993589371'
      position:
        x: 942
        y: 258
      positionAbsolute:
        x: 942
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(arg1: dict, arg2: str, arg3: str) -> dict:\n\
          \    targ1 = json.dumps(arg1, ensure_ascii=False)\n    \n    # 使用 str.format()\
          \ 替代 f-string\n    text = \"\"\"\n角色:你是一位精通SQL语言的数据库专家和数据分析师，精通clickhouse数据库，同时擅长心电解读和分析数据\n\
          相关表结构：{targ1}\n\n任务：请输出用户的周报大屏，{arg2}，请从大健康专家的视角，从多个视角和维度，会产生多个sql，最多只能生产10个sql。每个sql限制，只能获取近7天的数据，可以拿最近7天的数据（clickhouse:\
          \ toDate(created_at) > today() - 7    ）， 用户ID：{arg3}，注意获取用户信息的sql，只需要用户id作为条件，不需要添加时间。并在注释上说明，适合什么样的图表。\n\
          任务2： 字段使用中文别名，并且使用英文双引号引住。表名称不允许用反引号引住。\n任务3：用户ID：{arg3}一定要用上，本周报是面向用户的。注意有些表是没有用户ID关联字段，需要其他表做中间表。\n\
          关键步骤:\n1、对用户输入的内容进行识别和判断，如果内容涉及政治、时事、社会问题以及违背道德和法律法规的情形，一律输出:\"您提出的问题超出我应当回答的范围，请询问与公司业务相关的问题，否则我无法作出回答\n\
          2.务必根据上下文提供的数据表结构描述来编写SQL语句，确保仅使用数据表结构描述中提到的表名和字段名，并参考对字段的解释\n3.确保SQL兼容clickhouse\n\
          \n其他注意事项\n注意： 不要输出中间的思考过程，只输出最终的结果，不能使用 ```json 进行包裹最终的输出结果。\n\n输出：\n[ {{\"\
          description\": \"描述1\", \"sql\": \"SQL语句1\", \"chart_type\": \"图表类型1\"}},\
          \ {{\"description\": \"描述2\", \"sql\": \"SQL语句2\", \"chart_type\": \"图表类型2\"\
          }} ]\n\"\"\".format(\n        targ1=targ1,\n        arg2=arg2,\n       \
          \ arg3=arg3\n    )\n    \n    return {\n        \"result\": text,\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行 2
        type: code
        variables:
        - value_selector:
          - '1736502814530'
          - result
          variable: arg1
        - value_selector:
          - '1736501786115'
          - input
          variable: arg2
        - value_selector:
          - '1736501786115'
          - user_no
          variable: arg3
      height: 54
      id: '1738993653777'
      position:
        x: 638
        y: 258
      positionAbsolute:
        x: 638
        y: 258
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\nimport re\n\ndef extract_last_reply_content(data):\n \
          \   # 定义模式，匹配 event:reply 的 data 部分\n    pattern = r'event:reply\\n\\s*data:(.*?)\\\
          n\\n'\n    # 查找所有的匹配项\n    matches = re.findall(pattern, data['text'], re.DOTALL)\n\
          \    \n    if not matches:\n        return None  # 没有找到 event:reply 数据\n\
          \    \n    # 获取最后一个匹配的 data\n    last_reply_data_str = matches[-1].strip().lstrip('{').rstrip('}')\n\
          \    \n    # 将 data 转换为 JSON 对象\n    try:\n        last_reply_data = json.loads(last_reply_data_str)\n\
          \    except json.JSONDecodeError:\n        return None  # 数据格式错误\n    \n\
          \    # 提取 content 字符串\n    content_str = last_reply_data.get('payload',\
          \ {}).get('content', None)\n    \n    if content_str is not None:\n    \
          \    # 去掉多余的换行和缩进\n        content_str = content_str.strip()\n        #\
          \ 如果内容是以 \"[\" 开头的 JSON 数组，直接返回\n        if content_str.startswith('['):\n\
          \            return content_str\n    \n    return None  # content 字段不存在或格式不正确\n\
          def main(arg1: dict) -> dict:\n    result = extract_last_reply_content(arg1)\n\
          \    return {\n        \"result\": result,\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行 3
        type: code
        variables:
        - value_selector:
          - '1738993589371'
          - json
          variable: arg1
      height: 54
      id: '1738996359494'
      position:
        x: 1246
        y: 258
      positionAbsolute:
        x: 1246
        y: 258
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 243.0000000000001
      y: 217
      zoom: 0.7
