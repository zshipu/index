<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>应用架构 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/</link>
    <description>Recent content in 应用架构 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 05 Aug 2024 01:26:02 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>浅谈应用架构之领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E6%B5%85%E8%B0%88%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:26:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E6%B5%85%E8%B0%88%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>架构是产品和系统设计中的核心概念，它关乎如何将不同组件有序地组合起来，以实现更好的功能表现、迭代和维护。架构的演进和代码的重构是产品和系统发展中不可或缺的过程。 在技术领域，我们经常遇到中台、平台、系统和应用等术语，它们各自承担着不同的角色和功能。以下是它们之间的关系和特点： 应用：</description>
    </item>
    <item>
      <title>领域驱动设计在应用架构中的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 07:13:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计概述 软件开发过程中，捕捉和实现复杂的业务逻辑是一项重要任务。领域驱动设计（Domain-Driven Design，简称DDD）是一种以业务模型为核心的软件设计方法。本文将探讨DDD的基本概念、核心原则以及其在软件开发中的实际应用优势。 基本概念 领域驱动设计将业务逻辑作为</description>
    </item>
    <item>
      <title>Flutter 应用程序架构：鼓舞人心的领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/Flutter-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9E%B6%E6%9E%84%E9%BC%93%E8%88%9E%E4%BA%BA%E5%BF%83%E7%9A%84%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 05:45:16 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/Flutter-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9E%B6%E6%9E%84%E9%BC%93%E8%88%9E%E4%BA%BA%E5%BF%83%E7%9A%84%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Flutter 应用程序中结构良好的设计的重要性 ∘ 简介 ∘ 表示层 ∘ 领域层 ∘ 基础设施层 ∘ 可测试性 ∘ 结论 介绍 编写健壮且可维护的 Flutter 应用程序不仅仅需要编写代码，还需要经过深思熟虑的架构。如果没有清晰的架构模式，您的代码库很快就会变得混乱，给维护和测试带来挑战。在 MVC、MVVM 等各种架构范例中，领域驱动</description>
    </item>
  </channel>
</rss>
