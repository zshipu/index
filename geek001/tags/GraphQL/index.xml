<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GraphQL on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/GraphQL/</link>
    <description>Recent content in GraphQL on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 24 Apr 2024 11:34:05 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/GraphQL/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GraphQL安全漏洞与防护策略 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%98%B2%E6%8A%A4%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:34:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E4%B8%8E%E9%98%B2%E6%8A%A4%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>免责声明：请勿利用文章内的相关技术从事非法测试，如因此产生的一切不良后果与文章作者和本公众号无关。如有侵权烦请后台告知，我们会立即删除并致歉。谢谢 快将此公众号设置为星标🌟🌟🌟吧，获取到第一手推送信息！ GraphQL是一种受到在线数据存储和协作平台Meta、Instagram和Go</description>
    </item>
    <item>
      <title>使用 ThinkJS 搭建 GraphQL API --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-ThinkJS-%E6%90%AD%E5%BB%BA-GraphQL-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:33:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-ThinkJS-%E6%90%AD%E5%BB%BA-GraphQL-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>&amp;lt;section&amp;gt;&amp;lt;mp-common-profile data-pluginname=&amp;#34;mpprofile&amp;#34; data-id=&amp;#34;MzUxNzk1MjQ0Ng==&amp;#34; data-headimg=&amp;#34;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/300?wx_fmt=png&amp;amp;amp;wxfrom=19&amp;#34; data-nickname=&amp;#34;程序员成长指北&amp;#34; data-alias=&amp;#34;coder_growth&amp;#34; data-signature=&amp;#34;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&amp;#34; data-from=&amp;#34;0&amp;#34; data-origin_num=&amp;#34;101&amp;#34; data-is_biz_ban=&amp;#34;0&amp;#34; data-isban=&amp;#34;0&amp;#34; data-biz_account_status=&amp;#34;0&amp;#34; data-index=&amp;#34;0&amp;#34;&amp;gt;&amp;lt;/mp-common-profile&amp;gt;&amp;lt;/section&amp;gt;&amp;lt;section&amp;gt;&amp;lt;span data-style=&amp;#34;padding: 4px 7px;</description>
    </item>
    <item>
      <title>成功采用 GraphQL 改变行业的公司和产品 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%88%90%E5%8A%9F%E9%87%87%E7%94%A8-GraphQL-%E6%94%B9%E5%8F%98%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%85%AC%E5%8F%B8%E5%92%8C%E4%BA%A7%E5%93%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:26:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%88%90%E5%8A%9F%E9%87%87%E7%94%A8-GraphQL-%E6%94%B9%E5%8F%98%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%85%AC%E5%8F%B8%E5%92%8C%E4%BA%A7%E5%93%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在企业中成功采用 GraphQL 有助于提供出色的用户体验，从而改变整个行业。让我们看一下做到这一点的公司和产品。 正如 API 状态报告中所述，GraphQL 的受欢迎程度在过去三年中不断增长。这在 2024 年 GraphQL 报告中得到了体现，61.5% 的受访者在生产中使用 GraphQL，15.5% 的受访者正在探索它。 开发人员</description>
    </item>
    <item>
      <title>利用Spring Boot和GraphQL实现实时数据推送 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%88%A9%E7%94%A8Spring-Boot%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%95%B0%E6%8D%AE%E6%8E%A8%E9%80%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:23:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%88%A9%E7%94%A8Spring-Boot%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%95%B0%E6%8D%AE%E6%8E%A8%E9%80%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>随着互联网的发展和技术的进步，越来越多的应用程序对实时数据的需求日益增加。从社交网络到在线游戏，从即时通讯到金融交易，实时数据对于许多应用场景都至关重要。为了满足这种需求，开发人员需要一种高效、灵活的解决方案来实现数据的实时推送。在本文中，我们将探讨如何利用Spring Boot和</description>
    </item>
    <item>
      <title>GraphQL 在 Go 语言中的实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8-Go-%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:22:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8-Go-%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在构建现代Web应用程序时，GraphQL成为了一种流行的数据查询和操作语言。它提供了一种更高效、强大和灵活的方式来请求和操作数据，相比于传统的REST API，GraphQL能够让客户端精确地指定它们所需要的数据，减少了不必要的数据传输。在Go语言的生态系统中，graphql-g</description>
    </item>
    <item>
      <title>GraphQL 在微服务架构中的优势 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8A%BF--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:21:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8A%BF--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>关于使用REST还是GraphQL来构建微服务哪个更好，一直存在争论。这两种技术都有其支持者和批评者，但当涉及微服务架构的特定需求时，GraphQL 成为明显的领先者。原因如下。 1 了解 RESTful 的关注点 虽然 REST 多年来一直是首选 API 风格，因其简单性和普遍适用性而受到赞誉，但它的局限性在微服务环境</description>
    </item>
    <item>
      <title>API设计：REST与GraphQL的优缺点比较及最近热门文章推荐 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/API%E8%AE%BE%E8%AE%A1REST%E4%B8%8EGraphQL%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83%E5%8F%8A%E6%9C%80%E8%BF%91%E7%83%AD%E9%97%A8%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:20:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/API%E8%AE%BE%E8%AE%A1REST%E4%B8%8EGraphQL%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83%E5%8F%8A%E6%9C%80%E8%BF%91%E7%83%AD%E9%97%A8%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在 API 设计方面，REST 和 GraphQL 各有优缺点。 REST - 使用标准 HTTP 方法（如 GET、POST、PUT、DELETE）进行 CRUD 操作。 - 当您需要在单独的服务/应用程序之间提供简单、统一的接口时，效果很好。 - 缓存策略易于实施。 - 缺点是可能需要多次往返才能从不同的端点组装相关数据。 GraphQL - 为客户端提供单一端点</description>
    </item>
    <item>
      <title>OORT主网升级引入GraphQL支持，提升DeFi生态系统发展 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/OORT%E4%B8%BB%E7%BD%91%E5%8D%87%E7%BA%A7%E5%BC%95%E5%85%A5GraphQL%E6%94%AF%E6%8C%81%E6%8F%90%E5%8D%87DeFi%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E5%8F%91%E5%B1%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:19:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/OORT%E4%B8%BB%E7%BD%91%E5%8D%87%E7%BA%A7%E5%BC%95%E5%85%A5GraphQL%E6%94%AF%E6%8C%81%E6%8F%90%E5%8D%87DeFi%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E5%8F%91%E5%B1%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>🚀 Big News for #OORTCommunity! 🚀 Our mainnet is gearing up for a monumental upgrade TODAY, introducing #GraphQL support! This revolutionizes API interactions, making data fetching seamless. Get ready for a game-changing evolution. #OORTUpgrade #DeFi 重试 错误原因 🚀 #OORTCommunity 的大新闻！🚀 我们的主网今天正在准备进行重大升级，引入 #GraphQL 支持！这彻底改变了 API 交互，使数据获取变得无缝。准备好迎接改变游戏规则的演变。#OORTUpgrade #DeFi 💡 Why GraphQL? 💡 To arm us with the necessary tools for building robust DeFi ecosystems. This upgrade marks</description>
    </item>
    <item>
      <title>Spring Boot GraphQL服务构建与多端数据统一访问 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot-GraphQL%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA%E4%B8%8E%E5%A4%9A%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%BB%9F%E4%B8%80%E8%AE%BF%E9%97%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:18:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot-GraphQL%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA%E4%B8%8E%E5%A4%9A%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%BB%9F%E4%B8%80%E8%AE%BF%E9%97%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：九极客 欢迎星标关注九极客，一起探讨技术与架构！ 大家的点赞、收藏和评论很重要，如文章对您有帮助还请转发支持下，谢谢！ 图注:大少公众号 GraphQL是一种用于API的查询语言，旨在提供对客户端的灵活而高效的数据访问。与传统的RESTful API相比，GraphQL允许客户</description>
    </item>
    <item>
      <title>GraphQL 介绍及 Python 实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E4%BB%8B%E7%BB%8D%E5%8F%8A-Python-%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:17:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL-%E4%BB%8B%E7%BB%8D%E5%8F%8A-Python-%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：虎珀 感谢关注。问题或建议，请公众号留言 目录 什么是 GraphQLGraphQL Schema 重试 错误原因 GraphQL SDL 重试 错误原因 模式 schema对象 type方法 queryResolver 解析器代码 Python 实现测试客户端GraphQL 优点GraphQL 缺点附加成本过度查询安全问题参考每日一句 什么是 GraphQL GraphQL 是一种用于 API 的查询语言。根据预先定义的 Schema 对数据</description>
    </item>
    <item>
      <title>Expedia 优化航班搜索速度，采用微前端架构和 GraphQL --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Expedia-%E4%BC%98%E5%8C%96%E8%88%AA%E7%8F%AD%E6%90%9C%E7%B4%A2%E9%80%9F%E5%BA%A6%E9%87%87%E7%94%A8%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%92%8C-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:16:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Expedia-%E4%BC%98%E5%8C%96%E8%88%AA%E7%8F%AD%E6%90%9C%E7%B4%A2%E9%80%9F%E5%BA%A6%E9%87%87%E7%94%A8%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%92%8C-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>作者 | Rafal Gancarz 译者 | 明知山 策划 | Tina Expedia 通过对其 Web 和移动应用程序应用一系列优化措施，使航班搜索速度提升了 52%（页面可用时间）。为了支持这些改进措施，Expedia 提升了其应用程序的可观察性。Expedia 的 Flights Web 应用程序改成了微前端架构（MFA），以实现灵活性和可重用性，实现更好的优化。</description>
    </item>
    <item>
      <title>API 架构风格比较：REST vs gRPC vs GraphQL --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/API-%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E6%AF%94%E8%BE%83REST-vs-gRPC-vs-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:15:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/API-%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E6%AF%94%E8%BE%83REST-vs-gRPC-vs-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>构建 API 是现代工程中开发人员的最重要任务之一。这些 API 允许不同的系统进行通信和数据交换。虽然 REST 多年来一直是实现 API 的事实标准，但今天也有新兴的标准，如 gRPC 和 GraphQL。 什么是 API？ “应用程序编程接口”（API）是各种软件服务之间的通信渠道。传输请求和响应的应用程序分别称为客户端和服</description>
    </item>
    <item>
      <title>使用Nest.js和GraphQL实现CRUD接口 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Nest.js%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0CRUD%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:14:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Nest.js%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0CRUD%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>我们经常用 restful 的接口来开发业务。 比如 GET 请求 /students 查询所有学生，/students/1 查询 id 为 1 的学生 发送 POST、PUT、DETETE 请求分别代表增删改。 其实也可以用 GraphQL 的方式来写接口： 查询： 新增： 增删改查都在一个接口里搞定，并且想要什么数据由前端自己取。 今天我们就用 Nest + GrahQL 做一个 TodoList 的增删</description>
    </item>
    <item>
      <title>GraphQL简介与实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:13:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>模拟面试、简历指导、入职指导、项目指导、答疑解惑可私信找我~已帮助100+名同学完成改造！ 前言 大家好，我是林三心，用最通俗易懂的话讲最难的知识点是我的座右铭，基础是进阶的前提是我的初心~ GraphQL 是啥？ 官方介绍：GraphQL 既是一种用于 API 的查询语言也是一个满足你数据查询的运行时。Gra</description>
    </item>
    <item>
      <title>GraphQL介绍与Spring Boot GraphQL实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:12:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.Graphql介绍 重试 错误原因 GraphQL 是一个用于 API 的查询语言，是一个使用基于类型系统来执行查询的服务端运行时（类型系统由你的数据定义）。GraphQL 并没有和任何特定数据库或者存储引擎绑定，而是依靠你现有的代码和数据支撑。 优势 GraphQL 速度快，并且比较稳定，GraphQL 的操作是在数据层面</description>
    </item>
    <item>
      <title>REST与GraphQL在微服务架构中的比较 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/REST%E4%B8%8EGraphQL%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E6%AF%94%E8%BE%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:09:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/REST%E4%B8%8EGraphQL%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E6%AF%94%E8%BE%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>关于使用REST还是GraphQL来构建微服务哪个更好，一直存在争论。这两种技术都有其支持者和批评者，但当涉及微服务架构的特定需求时，GraphQL 成为明显的领先者。原因如下： RESTful 的关注点 虽然 REST 多年来一直是首选 API 风格，因其简单性和普遍适用性而受到赞誉，但它的局限性在微服务环境中变得</description>
    </item>
    <item>
      <title>推荐几款C#的通信框架 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A8%E8%8D%90%E5%87%A0%E6%AC%BEC</link>
      <pubDate>Wed, 24 Apr 2024 11:08:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A8%E8%8D%90%E5%87%A0%E6%AC%BEC</guid>
      <description>推荐几款C#的通信框架： github：https://github.com/bingbing-gui/dotnet-guide 1. GraphQL GraphQL是一个开源的，面向API而创造出来的数据查询操作语言以及相应的运行环境。于2012年仍处于Facebook内部开发阶段，直到2015年才</description>
    </item>
    <item>
      <title>使用 Nest.js &#43; GraphQL &#43; Prisma &#43; MySQL 实现增删改查 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-Nest.js-&#43;-GraphQL-&#43;-Prisma-&#43;-MySQL-%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:07:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-Nest.js-&#43;-GraphQL-&#43;-Prisma-&#43;-MySQL-%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>我们经常用 restful 的接口来开发业务。 比如 GET 请求 /students 查询所有学生，/students/1 查询 id 为 1 的学生 发送 POST、PUT、DETETE 请求分别代表增删改。 其实也可以用 GraphQL 的方式来写接口： 查询： 新增： 增删改查都在一个接口里搞定，并且想要什么数据由前端自己取。 今天我们就用 Nest + GrahQL 做一个 TodoList 的增删</description>
    </item>
    <item>
      <title>Spring Boot中使用GraphQL应对数据需求变化 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8GraphQL%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E9%9C%80%E6%B1%82%E5%8F%98%E5%8C%96--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:06:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8GraphQL%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E9%9C%80%E6%B1%82%E5%8F%98%E5%8C%96--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：九极客 欢迎星标关注九极客，一起探讨技术与架构！ 大家的点赞、收藏和评论很重要，如文章对您有帮助还请转发支持下，谢谢！ 图注:大少公众号 随着应用程序和服务的不断发展，数据需求往往会经历多次变化。为了应对这种变化，传统的RESTful API可能需要频繁地进行版本更新，而Gra</description>
    </item>
    <item>
      <title>使用 GraphQL 和 Fetch 进行 API 查询 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-GraphQL-%E5%92%8C-Fetch-%E8%BF%9B%E8%A1%8C-API-%E6%9F%A5%E8%AF%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:04:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8-GraphQL-%E5%92%8C-Fetch-%E8%BF%9B%E8%A1%8C-API-%E6%9F%A5%E8%AF%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>GraphQL 简介 GraphQL 是从远程服务器查询数据的强大工具，也是我构建 API 的首选方式。对一些人来说，学习它可能有一定难度，因为教程通常使用 Apollo 或 Relay 等工具进行编写。 这些工具很不错，但通常更适用于复杂项目。在某些情况下，最好选择更轻量级的方法，并且不要通过添加额外的库增加包大小。 在这种情况下，你可以直接使</description>
    </item>
    <item>
      <title>使用Spring for GraphQL实现聚合接口 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-for-GraphQL%E5%AE%9E%E7%8E%B0%E8%81%9A%E5%90%88%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:02:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-for-GraphQL%E5%AE%9E%E7%8E%B0%E8%81%9A%E5%90%88%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前面的背景部分，纯是记录一下，不用看。 背景 这是一个探索性质的工作。 当时公司基于众多研发团队的情况，希望能找出一条减少研发工作量的路线，除了GraphQL，还有其他的路线，比如自研低代码平台，采用国内的一些后台开发平台，代码生成器，还有一些简化接口开发的工具等等。 因为现实的情况，一</description>
    </item>
  </channel>
</rss>
