<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>性能优化 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
    <description>Recent content in 性能优化 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 06 May 2024 02:13:32 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用Netty提升NIO服务端工作效率 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/%E5%88%A9%E7%94%A8Netty%E6%8F%90%E5%8D%87NIO%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:13:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/%E5%88%A9%E7%94%A8Netty%E6%8F%90%E5%8D%87NIO%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Netty 是一个基于 NIO（Non-blocking I/O）的异步事件驱动的网络应用框架，它提供了一种高效、快速、可扩展的方式来开发网络应用。Netty 的本质是在 NIO 的基础上提供了更加友好的 API 和更强大的功能，使得开发者能够更轻松地构建高性能的网络应用。 要提升 NIO 服务端的工作效率，可以通过以下</description>
    </item>
    <item>
      <title>接口调优中的批量处理策略 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A5%E5%8F%A3%E8%B0%83%E4%BC%98%E4%B8%AD%E7%9A%84%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:27:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E6%8E%A5%E5%8F%A3%E8%B0%83%E4%BC%98%E4%B8%AD%E7%9A%84%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>架构师（JiaGouX） 我们都是架构师！ 架构未来，你来不来？ 批量处理是接口调优中常见的策略之一，可以减少数据库和网络开销，提高处理效率。 一、必要性 进行批量处理优化是接口调优的一项重要策略，它可以带来多方面的性能优势。 以下是一些批量处理优化的主要原因： 减少数据库访问次数： 批量处理将</description>
    </item>
    <item>
      <title>Expedia 优化航班搜索速度，采用微前端架构和 GraphQL --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Expedia-%E4%BC%98%E5%8C%96%E8%88%AA%E7%8F%AD%E6%90%9C%E7%B4%A2%E9%80%9F%E5%BA%A6%E9%87%87%E7%94%A8%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%92%8C-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:16:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Expedia-%E4%BC%98%E5%8C%96%E8%88%AA%E7%8F%AD%E6%90%9C%E7%B4%A2%E9%80%9F%E5%BA%A6%E9%87%87%E7%94%A8%E5%BE%AE%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%92%8C-GraphQL--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>作者 | Rafal Gancarz 译者 | 明知山 策划 | Tina Expedia 通过对其 Web 和移动应用程序应用一系列优化措施，使航班搜索速度提升了 52%（页面可用时间）。为了支持这些改进措施，Expedia 提升了其应用程序的可观察性。Expedia 的 Flights Web 应用程序改成了微前端架构（MFA），以实现灵活性和可重用性，实现更好的优化。</description>
    </item>
  </channel>
</rss>
