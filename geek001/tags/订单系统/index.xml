<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>订单系统 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 订单系统 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 15 Jul 2024 06:54:52 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DDD落地与携程订单系统重构 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E8%90%BD%E5%9C%B0%E4%B8%8E%E6%90%BA%E7%A8%8B%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:54:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E8%90%BD%E5%9C%B0%E4%B8%8E%E6%90%BA%E7%A8%8B%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>从腾讯视频DDD重构案例，看看DDD极大价值 本文目录 - 尼恩说在前面 - 携程订单系统重构的DDD实践 - 一、案例介绍 - 二、问题分析 - 2.1 沟通困难 - 2.2 业务边界不清晰 - 2.3 面对业务变化修改困难 - 三、解决方案 - 3.1 回归业务本质——挖掘愿景 - 3.2 高效沟通——利用事件风暴统一语言 - 3.3 自上而下细化边界——</description>
    </item>
    <item>
      <title>基于领域驱动设计实现订单系统 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E5%9F%BA%E4%BA%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:22:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E5%9F%BA%E4%BA%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>基于领域驱动设计 (DDD) 四层架构实现订单系统 DDD 四层架构包括用户界面层 (UI)、应用层 (Application)、领域层 (Domain)、和基础设施层 (Infrastructure)。我们将按此结构实现订单系统。 项目结构 首先，让我们定义项目结构： src ├── main │ ├── java │ │ └── com │ │ └──</description>
    </item>
    <item>
      <title>领域驱动设计在订单与支付系统的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E8%AE%A2%E5%8D%95%E4%B8%8E%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:21:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E8%AE%A2%E5%8D%95%E4%B8%8E%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计 (DDD) 应用于订单系统和支付系统 简介 在现代软件开发中，领域驱动设计 (DDD) 已成为构建复杂业务系统的有效方法。本文将深入探讨如何将 DDD 原则应用于订单系统和支付系统的设计，提供实际示例和最佳实践，帮助开发者创建高效、可扩展的系统。 目录 什么是领域驱动设计 (DDD)？ DDD 的定义 DDD 的重要性 主要</description>
    </item>
  </channel>
</rss>
