<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>供应链 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E4%BE%9B%E5%BA%94%E9%93%BE/</link>
    <description>Recent content in 供应链 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 30 Jul 2024 12:25:32 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E4%BE%9B%E5%BA%94%E9%93%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>供应链商品域的DDD实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/%E4%BE%9B%E5%BA%94%E9%93%BE%E5%95%86%E5%93%81%E5%9F%9F%E7%9A%84DDD%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 30 Jul 2024 12:25:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/%E4%BE%9B%E5%BA%94%E9%93%BE%E5%95%86%E5%93%81%E5%9F%9F%E7%9A%84DDD%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在现代软件工程中，随着业务需求的不断增长和变化，软件系统的复杂性日益增加。领域驱动设计（Domain-Driven Design, DDD）作为一种应对复杂性的方法论，越来越受到重视。本文将从软件复杂性的来源、DDD的重要性以及其核心概念三个方面进行阐述。 一、软件复杂性的来源 软件复杂性主要源自以</description>
    </item>
  </channel>
</rss>
