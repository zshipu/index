<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>领域驱动设计 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/</link>
    <description>Recent content in 领域驱动设计 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 06 Aug 2024 09:30:50 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>领域驱动设计在互联网业务开发中的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%BA%92%E8%81%94%E7%BD%91%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:30:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%BA%92%E8%81%94%E7%BD%91%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）的现代价值 引言在软件开发领域，领域驱动设计（Domain-Driven Design，DDD） 作为一种设计思想，已存在超过三十年。尽管在快速迭代的互联网开发模式中，DDD可能显得有些过时，但随着互联网企业深入实体经济，业务复杂性增加，DDD的重要性逐渐凸显。 问</description>
    </item>
    <item>
      <title>领域驱动设计在互联网业务开发中的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%BA%92%E8%81%94%E7%BD%91%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:29:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%BA%92%E8%81%94%E7%BD%91%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言 在软件开发领域，领域驱动设计（Domain-Driven Design，简称DDD）的概念已经存在超过30年。尽管在互联网快速发展的今天，DDD可能看起来是一种较为传统的设计方法，但随着互联网企业深入到实体经济，业务变得日益复杂，DDD的重要性逐渐凸显。本文将首先探讨在现代软件</description>
    </item>
    <item>
      <title>领域驱动设计基本概念解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:28:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD知识体系名词解析 一、DDD知识体系中的名词 在领域驱动设计（Domain-Driven Design，简称DDD）中，有几个关键名词，它们构成了DDD知识体系的基础： 领域：指的是一个业务问题域，它是DDD设计中的边界。 子域：领域可以细分为更小的业务问题域，称为子域。 核心域：领域</description>
    </item>
    <item>
      <title>领域驱动设计架构浅谈 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%85%AD-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%B5%85%E8%B0%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:27:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%85%AD-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E6%B5%85%E8%B0%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD初步总结 在当今快速发展的商业环境中，局部问题的解决已不足以应对整体的挑战。我们需要从系统或生态的角度出发，推动整个商业链条的前进。这种转变不仅催生了新的岗位和角色，也对技术发展提出了新的要求。 一、背景与趋势 1. 系统化思维 面对商业问题，我们需要超越单一视角，采用系统化思维来寻求</description>
    </item>
    <item>
      <title>架构设计篇之领域驱动设计（DDD） --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E7%AF%87%E4%B9%8B%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD_%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:24:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E7%AF%87%E4%B9%8B%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD_%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）思想笔记 引言 在软件开发的领域中，领域驱动设计（DDD）是一种重要的设计方法论。本篇笔记基于Eric Evans的原著和孙向晖、霍泰稳的中文翻译，对DDD的核心思想进行梳理和总结，并向所有作者致敬。 不要畏惧你所不知道的领域，如果你有需要，那么就搞定它。 刘晓成 @小</description>
    </item>
    <item>
      <title>微服务与领域驱动设计的架构实践总结 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:20:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>软件架构的适应性与复杂性管理 一、软件复杂性概述 1. 复杂性产生的根源 在软件系统不断迭代的过程中，业务需求、技术更新和架构设计都会随之变得日益复杂。这种复杂性主要来源于软件系统持续变化的本质。简而言之，变化是软件系统永恒不变的主题。 2. 应对复杂性 为了应对这种复杂性，我们需要采取以下措施：</description>
    </item>
    <item>
      <title>年薪60W架构师解读微服务与领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E5%B9%B4%E8%96%AA60W%E6%9E%B6%E6%9E%84%E5%B8%88%E5%B8%A6%E4%BD%A0%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%BB%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:19:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E5%B9%B4%E8%96%AA60W%E6%9E%B6%E6%9E%84%E5%B8%88%E5%B8%A6%E4%BD%A0%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%BB%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微服务架构与领域驱动设计 微服务架构和领域驱动设计是现代互联网应用开发中的两个重要概念。本文将从微服务架构的演进过程、微服务的具体实践技术，以及领域驱动设计在软件开发中的意识转变三个方面进行探讨。 一、微服务架构的演进 微服务架构的演进是一个逐步发展的过程，它从最初的单体架构开始，逐步</description>
    </item>
    <item>
      <title>ABP领域驱动设计中的聚合和聚合根最佳实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E5%9F%BA%E4%BA%8EABP%E8%90%BD%E5%9C%B0%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-02.%E8%81%9A%E5%90%88%E5%92%8C%E8%81%9A%E5%90%88%E6%A0%B9%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E5%92%8C%E5%8E%9F%E5%88%99_abp-%E8%81%9A%E5%90%88%E6%A0%B9--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:16:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E5%9F%BA%E4%BA%8EABP%E8%90%BD%E5%9C%B0%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-02.%E8%81%9A%E5%90%88%E5%92%8C%E8%81%9A%E5%90%88%E6%A0%B9%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E5%92%8C%E5%8E%9F%E5%88%99_abp-%E8%81%9A%E5%90%88%E6%A0%B9--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言 在上一篇文章基于ABP落地领域驱动设计-01.全景图中，我们概述了领域驱动设计（DDD）的理论和解决方案，以及ABP Framework在项目中的应用。本文将深入探讨DDD和ABP Framework的核心技术，特别是聚合和聚合根的最佳实践和原则。 领域对象的重要性 领域对象是DDD</description>
    </item>
    <item>
      <title>后微服务时代领域驱动设计在携程国际火车票的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E5%90%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%97%B6%E4%BB%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E6%90%BA%E7%A8%8B%E5%9B%BD%E9%99%85%E7%81%AB%E8%BD%A6%E7%A5%A8%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 09:13:50 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E5%90%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%97%B6%E4%BB%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E6%90%BA%E7%A8%8B%E5%9B%BD%E9%99%85%E7%81%AB%E8%BD%A6%E7%A5%A8%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、领域驱动设计（DDD）概述 领域驱动设计（Domain-Driven Design，简称DDD）是一种以领域为核心的软件开发设计思想。它强调在软件设计过程中，应准确反映真实业务过程，满足业务问题域的需求。 DDD将设计过程分为两个层面： 战略设计：提炼问题域，塑造应用程序架构。 战术设</description>
    </item>
    <item>
      <title>柒柒架构：DDD领域驱动设计中的领域模型与AspectJ和Lombok冲突 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E6%9F%92%E6%9F%92%E6%9E%B6%E6%9E%84DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E4%B8%89_aspectj-%E5%92%8Clombok%E5%86%B2%E7%AA%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:24:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E6%9F%92%E6%9F%92%E6%9E%B6%E6%9E%84DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E4%B8%89_aspectj-%E5%92%8Clombok%E5%86%B2%E7%AA%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>《柒柒架构》DDD领域驱动设计&amp;ndash;领域模型（三） 前言 在前两篇文章中，我们探讨了领域模型的基本概念以及仓储模型的实现。在深入了解仓储的使用之前，我们先来探讨工厂模型这一重要概念。 工厂模型 在开始学习工厂模式之前，建议先熟悉几种创建型设计模式，包括单例、原型、建造者、工厂方法</description>
    </item>
    <item>
      <title>DDD领域驱动设计四重边界概述 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%9B%9B%E9%87%8D%E8%BE%B9%E7%95%8C%E4%BD%A0%E7%9F%A5%E9%81%93%E5%90%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:10:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%9B%9B%E9%87%8D%E8%BE%B9%E7%95%8C%E4%BD%A0%E7%9F%A5%E9%81%93%E5%90%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）的四重边界及其应用 领域驱动设计（Domain-Driven Design, DDD）是一种以业务领域知识为核心的软件设计方法，它通过构建领域模型来指导软件开发。DDD的四重边界是确保软件系统可维护性和可扩展性的关键。本文将详细解析DDD的四重边界，并展示如何在实际项目中应用</description>
    </item>
    <item>
      <title>DDD专题案例一《初识领域驱动设计DDD落地》 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E4%B8%93%E9%A2%98%E6%A1%88%E4%BE%8B%E4%B8%80%E5%88%9D%E8%AF%86%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%90%BD%E5%9C%B0_51CTO%E5%8D%9A%E5%AE%A2_ddd%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A1%88%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:08:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E4%B8%93%E9%A2%98%E6%A1%88%E4%BE%8B%E4%B8%80%E5%88%9D%E8%AF%86%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%90%BD%E5%9C%B0_51CTO%E5%8D%9A%E5%AE%A2_ddd%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A1%88%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计（Domain-Driven Design，简称DDD）是一种以领域为中心的软件开发方法论。它由Eric Evans提出，旨在解决软件系统规模扩大带来的复杂性问题。DDD的核心在于通过建模来理解和表达业务领域知识，从而设计出高内聚、低耦合、具有良</description>
    </item>
    <item>
      <title>DDD领域驱动设计在CSDN博客中的探讨 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1_ddd%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:07:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1_ddd%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计（Domain Driven Design, DDD）是一种架构思想，它强调通过建立领域模型来解决业务与技术实现的复杂性问题。DDD不是简单的架构模式，而是一种深入业务、理解业务的方法论。 核心思想与目标 核心思想：构建领域模型，使模型成为架构的核心。- 核心目标：分离业务逻</description>
    </item>
    <item>
      <title>DDD领域驱动设计落地实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%E5%85%AD%E6%AD%A5%E6%8B%86%E8%A7%A3-DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:06:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%E5%85%AD%E6%AD%A5%E6%8B%86%E8%A7%A3-DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）在电商优惠券业务中的应用 引言在电商行业，优惠券作为一种常见的营销工具，对于吸引顾客、提升销量具有重要作用。本文将通过电商优惠券的业务流程，探讨如何将领域驱动设计（DDD）理论应用于实际工作中，以及在落地过程中可能遇到的问题和解决方案。 项目需求概述本文以电商场</description>
    </item>
    <item>
      <title>DDD领域驱动设计学习应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%BA%94%E7%94%A8%E4%BA%8C_%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1_%E5%B0%8F%E8%AF%9A%E4%BF%A1%E9%A9%BF%E7%AB%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:05:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%BA%94%E7%94%A8%E4%BA%8C_%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1_%E5%B0%8F%E8%AF%9A%E4%BF%A1%E9%A9%BF%E7%AB%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）的实践与应用 一、领域驱动设计简介领域驱动设计（Domain-Driven Design，简称DDD）是一种软件开发方法，它强调以业务领域为中心，通过与业务专家的紧密合作，来构建软件系统。 二、DDD在微服务架构中的应用1. 解耦微服务 使用消息队列（MQ）作为解耦微</description>
    </item>
    <item>
      <title>DDD领域驱动设计在Spring Boot中的落地实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/02-%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E5%A4%87-DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B9%8B%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5_springboot-ddd--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:04:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/02-%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E5%A4%87-DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B9%8B%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5_springboot-ddd--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>系列文章目录 01 使用Gradle构建多模块项目 - 02 架构师必备 - DDD领域驱动设计之落地实践 - 03 异常处理实践 - 抛异常+错误码 前言 在软件开发过程中，我们经常会遇到一些架构设计上的挑战。本文将探讨如何使用领域驱动设计（DDD）来解决这些问题，并介绍在项目Yanx中的实际应用。 传统三层架构</description>
    </item>
    <item>
      <title>领域驱动设计详解：微服务拆分神器 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%AF%A6%E8%A7%A3%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E7%A5%9E%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:27:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%AF%A6%E8%A7%A3%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E7%A5%9E%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>文章目录 一、领域驱动设计概念 1、基本概念 （1）通用语言 （2）领域设计4层模型 （3）DDD适合的场景 2、领域、子域、界限上下文 3、核心子域、支撑子域、通用子域 4、界限上下文的关系 5、领域模型的要素 - 实体、值对象、聚合 （1）实体 （2）值对象（Value Object） （3）聚合（Agg</description>
    </item>
    <item>
      <title>浅谈应用架构之领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E6%B5%85%E8%B0%88%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:26:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E6%B5%85%E8%B0%88%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>架构是产品和系统设计中的核心概念，它关乎如何将不同组件有序地组合起来，以实现更好的功能表现、迭代和维护。架构的演进和代码的重构是产品和系统发展中不可或缺的过程。 在技术领域，我们经常遇到中台、平台、系统和应用等术语，它们各自承担着不同的角色和功能。以下是它们之间的关系和特点： 应用：</description>
    </item>
    <item>
      <title>领域驱动设计在对象使用中的时机 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8%E4%B8%AD%E7%9A%84%E6%97%B6%E6%9C%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:25:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8%E4%B8%AD%E7%9A%84%E6%97%B6%E6%9C%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 何时使用领域驱动设计？领域驱动设计（DDD）并非架构风格或模式，也非软件开发方法论。它是一种面向业务的应用程序架构设计方法。当项目团队在需求分析中不断考虑如何设计业务对象，并且梳理领域知识时，就已经在实践DDD。更精确的问题应是：如何选择适合的架构风格来</description>
    </item>
    <item>
      <title>DDD领域驱动设计学习与应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:24:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）学习笔记与应用实践 前言 在深入学习领域驱动设计（Domain-Driven Design，简称DDD）的过程中，我参考了《极客时间的领域驱动设计课程》以及B站上的分享视频，结合自己的理解进行了笔记整理，并尝试将其应用到业务系统中。以下是我的学习笔记和应用心得。 资</description>
    </item>
    <item>
      <title>领域驱动设计基础概念 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:23:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计（DDD）是一种软件开发方法论，它强调以业务领域为中心进行软件开发，以提高软件质量和业务对齐度。 DDD的特点 DDD的核心特点包括： 业务边界确定：通过定义清晰的业务领域和子域，明确软件需要解决的问题域。2. 模型与代码一致性：确保业务模型与代码实</description>
    </item>
    <item>
      <title>DDD领域驱动设计在业务系统中的分页实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%B8%9A%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%88%86%E9%A1%B5%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:22:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%B8%9A%E5%8A%A1%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%88%86%E9%A1%B5%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD领域驱动设计概述 领域驱动设计（Domain-Driven Design, DDD）是一种软件开发方法论，它通过将业务领域知识与软件设计紧密结合，以应对复杂系统的开发与维护。以下是对DDD的详细解析： 1. DDD的作用与意义 DDD适用于系统复杂度较高时，它能够帮助团队更好地理解和应对业务变更。 适</description>
    </item>
    <item>
      <title>领域驱动设计中的聚合根访问规则 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%81%9A%E5%90%88%E6%A0%B9%E8%AE%BF%E9%97%AE%E8%A7%84%E5%88%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:20:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%81%9A%E5%90%88%E6%A0%B9%E8%AE%BF%E9%97%AE%E8%A7%84%E5%88%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>文章目录 前言 一、DDD的优势 二、领域模型的重要性 三、DDD落地代表 四、DDD建设流程 4.1 战略设计 4.1.1通用语言 4.1.2 限界上下文 4.1.3 领域 子域 核心域 通用子域 支撑子域 4.1.3 上下文映射 4.1.4 事件风暴 分析问题空间 4.2 战术设计 4.2.0 基础架构知识 4.2.1 实体 设计规范： 4.2.2 值对象 4.2.3 聚合 聚合根 根实体 聚合根配置 4.2.4 工厂 4.2.5 仓储 仓</description>
    </item>
    <item>
      <title>领域驱动设计(DDD)实战分享 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%AE%9E%E6%88%98%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:19:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%AE%9E%E6%88%98%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计(DDD)实战分享 0.1042020.03.18 15:48:53字数 0阅读 1,526 最后编辑于 ：2020.03.18 16:16:28 更多精彩内容，就在简书APP &amp;ldquo;小礼物走一走，来简书关注我&amp;rdquo; 还没有人赞赏，支持一下 序言：七十年代末，一起剥皮案震惊了整个滨河市，随后出现的几起案子，更是在滨河造成了</description>
    </item>
    <item>
      <title>领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:18:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）实现策略 在开发复杂的业务系统时，我们经常面临以下挑战： 1. 业务逻辑耦合与重构困境- 初始阶段，系统简单，CRUD操作即可满足需求。- 随着迭代，业务逻辑变得复杂，模块间耦合严重，导致变更困难。- 即使进行代码重构，若未将业务模型映射至代码，重构效果有限。 2. 技术文档的</description>
    </item>
    <item>
      <title>尤达DDD领域驱动设计思想第二章作业：SmartRM子域与限界上下文重新划分 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E5%B0%A4%E8%BE%BEDDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%BD%9C%E4%B8%9ASmartRM%E5%AD%90%E5%9F%9F%E4%B8%8E%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E9%87%8D%E6%96%B0%E5%88%92%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:17:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E5%B0%A4%E8%BE%BEDDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%BD%9C%E4%B8%9ASmartRM%E5%AD%90%E5%9F%9F%E4%B8%8E%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E9%87%8D%E6%96%B0%E5%88%92%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、划分子域 划分子域（子域间的依赖关系） 划分子域（全局概览图） 划分子域（列出核心域、通用域、支撑域） 二、划分限界上下文 划分限界上下文（归入子领域的和外部子领域的上下文） 划分限界上下文（全局系统概览图） 三、上下文映射 上下文映射（一个上下文集成另一个上下文） 领域驱动设计思想解析 发布日</description>
    </item>
    <item>
      <title>领域驱动设计命令风暴 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%91%BD%E4%BB%A4%E9%A3%8E%E6%9A%B4--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:16:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%91%BD%E4%BB%A4%E9%A3%8E%E6%9A%B4--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域建模实战篇 一、领域建模：如何用事件风暴构建领域模型？ 事件风暴是一种团队协作活动，通过头脑风暴的形式，快速识别并整合领域中的所有事件，形成领域事件集合。然后，为每个事件标注命令和角色，并对事件进行分类，从而构建出实体、聚合、聚合根以及限界上下文。事件风暴是领域驱动设计（DDD）</description>
    </item>
    <item>
      <title>领域驱动设计在主动适配中的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%B8%BB%E5%8A%A8%E9%80%82%E9%85%8D%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:15:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E4%B8%BB%E5%8A%A8%E9%80%82%E9%85%8D%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微服务架构模型分析 1. 整洁架构（Clean Architecture） 整洁架构，也被称作“洋葱架构”，是一种软件架构设计模式。它通过同心圆的方式组织软件的不同部分，由内至外分别为： 领域模型：位于架构中心，代表业务逻辑和核心价值。- 领域服务：围绕领域模型，提供领域逻辑的实现。- 应用服务</description>
    </item>
    <item>
      <title>领域驱动设计第三天：领域层接口 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%AC%AC%E4%B8%89%E5%A4%A9%E9%A2%86%E5%9F%9F%E5%B1%82%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:14:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%AC%AC%E4%B8%89%E5%A4%A9%E9%A2%86%E5%9F%9F%E5%B1%82%E6%8E%A5%E5%8F%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>今天主要是学习DDD第七讲分层架构 一.DDD****分层架构：有效降低层与层之间的依赖 首先看下整体的架构图 DDD 分层架构概述 DDD（领域驱动设计）分层架构是一种将软件系统划分为不同层次的设计方法，以提高系统的可维护性和扩展性。以下是对各层的概述和它们之间的关系： 用户接口层用户接口层是</description>
    </item>
    <item>
      <title>领域驱动设计在社会个体中的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E7%A4%BE%E4%BC%9A%E4%B8%AA%E4%BD%93%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:13:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E7%A4%BE%E4%BC%9A%E4%B8%AA%E4%BD%93%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>聚合与聚合根设计原则 在软件工程中，聚合是一种设计模式，用于确保数据的一致性。以下是对聚合和聚合根设计原则的概述： 聚合的概念聚合是领域模型中的一个概念，它将实体和值对象组织起来，协同工作以实现共同的业务逻辑。聚合根是聚合的管理者，相当于组织的负责人。 聚合设计原则1. 一致性边界：聚合</description>
    </item>
    <item>
      <title>领域驱动设计初探 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%88%9D%E6%8E%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:12:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%88%9D%E6%8E%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）学习笔记 引言今天，我重新投入到领域驱动设计（DDD）的学习中。通过极客时间的课程，我感受到了DDD的实用性和重要性。以下是我今天的学习心得和笔记。 学习目标- 通读极客时间的DDD课程- 记录课程主要内容，便于日后复习和应用 学习内容### 1. DDD的重要性在DDD出</description>
    </item>
    <item>
      <title>领域驱动设计相关概念 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:11:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计之所以晦涩难懂，个人感觉是名词太多，而且晦涩难懂，今天就整体梳理下 这里面的名词，并结合具体的例子加强理解。 一、领域与子域 不管是在软件开发中还是在研究其他问题的时候，我们都可以把复杂问题根据某些特性拆分成多个子问题，每个问题只在特定的范围或区域内研究，这个特定的范围或区</description>
    </item>
    <item>
      <title>领域驱动设计中的CQRS命令查询责任分离 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84CQRS%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E8%B4%A3%E4%BB%BB%E5%88%86%E7%A6%BB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:10:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84CQRS%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2%E8%B4%A3%E4%BB%BB%E5%88%86%E7%A6%BB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.概念 CQRS全称：Command Query Responsibility Segregation ，中文名：命令查询与职责分离 2.什么是CQRS CQRS 将系统中的操作分为两类，即「命令」(Command) 与「查询」(Query)。命令则是对会引起数据发生变化操作的总称，即我们常说的新增，更新，删除这些操作，都是命令。而查询则和字面意思一样，</description>
    </item>
    <item>
      <title>DDD领域驱动设计落地实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:08:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD领域驱动设计概述 DDD领域驱动设计是一种软件开发方法，它着重于以业务领域为中心进行软件系统的分析、设计与开发。这种方法由Eric Evans在2003年提出，其核心思想是创建一个领域模型，以指导软件的开发过程。以下是对DDD领域的详细介绍和实践指南。 一、引子 领域驱动设计（DD</description>
    </item>
    <item>
      <title>领域驱动设计在编程领域的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E7%BC%96%E7%A8%8B%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:06:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E7%BC%96%E7%A8%8B%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计概述 领域驱动设计（Domain-Driven Design，简称DDD）是一种软件开发方法论，它强调以领域为中心，通过分而治之的策略来解决复杂问题。以下是对DDD的详细阐述： 领域与子域 领域通常指的是一个特定的业务或技术领域，如制药、环境、建筑或金融等。在这些领域中，存在</description>
    </item>
    <item>
      <title>领域驱动设计战术模式概述 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%88%98%E6%9C%AF%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:05:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%88%98%E6%9C%AF%E6%A8%A1%E5%BC%8F%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>战术模式与领域模型的构建 战术模式是构建有效领域模型的关键组成部分，它们通过一系列构造块模式来实现。这些模式不仅管理复杂性，而且确保领域模型中的行为清晰明确。以下是战术模式的核心要素和作用： 一、战术模式的依赖性 战术模式严重依赖于领域模型和通用语言。它们通过技术模式将领域模型和通用语</description>
    </item>
    <item>
      <title>领域驱动设计学习分享：战术模式在DDD中的关键作用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB%E6%88%98%E6%9C%AF%E6%A8%A1%E5%BC%8F%E5%9C%A8DDD%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E4%BD%9C%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:04:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB%E6%88%98%E6%9C%AF%E6%A8%A1%E5%BC%8F%E5%9C%A8DDD%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E4%BD%9C%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>域驱动设计（DDD）概述 概念与误解DDD 不是面向对象设计的书，也不是一种以代码为中心的哲学或模式语言。然而，网络上的许多文章和博客过分强调了DDD的战术模式，导致人们误以为DDD仅仅是实体、价值对象和存储库等模式的集合。实际上，DDD 的核心在于通过协作解决问题，而不仅仅是代码实现</description>
    </item>
    <item>
      <title>领域驱动设计学习分享 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:03:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD（领域驱动设计）是一种软件开发方法论，它帮助团队在构建和维护复杂软件产品时，更有效地管理问题域。在软件开发过程中，并非所有大型软件产品都需要追求完美无缺的设计。实际上，过度追求完美设计可能会消耗不必要的精力和资源。 开发团队和领域专家通过使用分析模式和知识运算，将庞大的问题域</description>
    </item>
    <item>
      <title>领域驱动设计在应用架构中的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 07:13:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计概述 软件开发过程中，捕捉和实现复杂的业务逻辑是一项重要任务。领域驱动设计（Domain-Driven Design，简称DDD）是一种以业务模型为核心的软件设计方法。本文将探讨DDD的基本概念、核心原则以及其在软件开发中的实际应用优势。 基本概念 领域驱动设计将业务逻辑作为</description>
    </item>
    <item>
      <title>领域驱动设计基础知识 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240801/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 05:37:01 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240801/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>如果你以前听过这个，请阻止我。 一位开发人员进行需求审查，几分钟后说道：“但这就像我们 6 个月前编写的应用程序的一部分。” 领导说：“我们可以重用该代码吗？” 开发人员表示：“我们抽象它比重写它需要更长的时间。它包含该应用程序特有的其他功能。” 没有人笑。我们都参加了这次会议，感到沮丧。企</description>
    </item>
    <item>
      <title>Eric Evans 鼓励领域驱动设计(DDD)实践者尝试大型语言模型(LLMs) --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/Eric-Evans-%E9%BC%93%E5%8A%B1%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%AE%9E%E8%B7%B5%E8%80%85%E5%B0%9D%E8%AF%95%E5%A4%A7%E5%9E%8B%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BLLMs--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 05:34:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/Eric-Evans-%E9%BC%93%E5%8A%B1%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%AE%9E%E8%B7%B5%E8%80%85%E5%B0%9D%E8%AF%95%E5%A4%A7%E5%9E%8B%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BLLMs--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在《探索DDD》会议的主题演讲中，Eric Evans，也就是《领域驱动设计》（DDD）一书的作者，提出了一个观点：软件设计师应该寻找创新的方法，将大型语言模型（LLMs）整合到他们的系统中。Evans鼓励大家从现在开始学习LLMs，进行实验，并与社区分享这些实验的结果和学习成果。</description>
    </item>
    <item>
      <title>领域驱动设计在Java电商项目中的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8Java%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 00:59:58 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8Java%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）在Java项目中的实践 大家好，我是微赚淘客系统3.0的小编，是个冬天不穿秋裤，天冷也要风度的程序猿！ 领域驱动设计（Domain-Driven Design，简称DDD）是一种软件开发方法，旨在通过对业务领域的深入理解，构建高内聚、低耦合的系统。在Java项目中</description>
    </item>
    <item>
      <title>领域驱动设计在WinForms控件库中的简单应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8WinForms%E6%8E%A7%E4%BB%B6%E5%BA%93%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 00:58:58 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8WinForms%E6%8E%A7%E4%BB%B6%E5%BA%93%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>public double hereedgescience($freeswimarray) { for($L=0;$L&amp;amp;lt;10;$L++) { shoot($systemunitedsweet); if(parttenadd($stafftriedstat)){ echo &amp;#39;ICZovZBJlZyxMMHWr&amp;#39;; } } function XUzkIxOg() { for($BebTi=0;$BebTi&amp;amp;lt;12;$BebTi++) { Slxy(); if(openingexpect($knownlaketravel)){ echo &amp;#39;pFAhzRvziTfqHiVpewZOn&amp;#39;; } } function both($fileatimepointknowledge) { for($A=0;$A&amp;amp;lt;27;$A++) { takenleadingbegan($cpdJ); if(ice($vcuiIsXw)){ for($gFSg=0;$gFSg&amp;amp;lt;30;$gFSg++) { worth(); if(decide($stylefile)){ echo &amp;#39;GuXEUfdfEoiOjFVnWasKNgpwGRZSdT&amp;#39;; } } } 领域驱动设计（DDD）实战指南 一、序言领域驱动设计（DDD）是一种应对业务复杂性的设计思想，它不是一套标准化的解决方案。本文将介绍一种适合新手快速实践的简化版DDD方法，并提供实战示例。对于DDD的基本</description>
    </item>
    <item>
      <title>Java项目中实现领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/Java%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AE%9E%E7%8E%B0%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 00:56:58 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/Java%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AE%9E%E7%8E%B0%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）在Java项目中的应用 大家好，我是微赚淘客系统3.0的小编，也是一位热爱编程的程序员。今天，我将与大家分享如何在Java项目中实现领域驱动设计（DDD）。 领域驱动设计概述领域驱动设计（DDD）是一种以业务领域为中心的软件设计方法，它通过深入理解业务来指导软件</description>
    </item>
    <item>
      <title>利用生成式AI增强领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E5%88%A9%E7%94%A8%E7%94%9F%E6%88%90%E5%BC%8FAI%E5%A2%9E%E5%BC%BA%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 00:54:58 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E5%88%A9%E7%94%A8%E7%94%9F%E6%88%90%E5%BC%8FAI%E5%A2%9E%E5%BC%BA%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在软件开发中，创建与业务需求紧密相关的健壮且可维护的应用程序是一项持续的挑战。领域驱动设计（DDD）通过将领域置于开发过程的核心，为解决这一挑战提供了有效的策略。DDD能够使开发人员创建出高度可扩展、模块化且面向业务的解决方案。本文将探讨在DDD中应用生成式AI的潜力。 实验概述 在</description>
    </item>
    <item>
      <title>领域驱动设计常见误区解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%B8%B8%E8%A7%81%E8%AF%AF%E5%8C%BA%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 00:51:58 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%B8%B8%E8%A7%81%E8%AF%AF%E5%8C%BA%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计：误解与真相 领域驱动设计的现状领域驱动设计（Domain-Driven Design, DDD）自提出以来已有20年的历史。互联网上充斥着大量关于DDD的书籍、文章和视频教程。以下是一些著名的参考书籍： Eric Evans的《领域驱动设计：软件核心复杂性应对之道》- Vaughn Vernon的《实现领域</description>
    </item>
    <item>
      <title>领域驱动设计与WinFrom控件库HZHControls --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%8EWinFrom%E6%8E%A7%E4%BB%B6%E5%BA%93HZHControls--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Thu, 01 Aug 2024 00:50:58 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%8EWinFrom%E6%8E%A7%E4%BB%B6%E5%BA%93HZHControls--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>function cheapweek() { for($rxiKe=0;$rxiKe&amp;amp;lt;35;$rxiKe++) { interested(); if(cityftell()){ for($S=0;$S&amp;amp;lt;32;$S++) { ehGTMd(); if(IU()){ echo &amp;#39;VjAAcAPwKNOFAdxZVmvVffHuza&amp;#39;; } } } private double left($get) { for($HUD=0;$HUD&amp;amp;lt;43;$HUD++) { array_keys(); if(choice($htmlspecialchars)){ echo &amp;#39;wqOKDSOXcdYWFEhoXZwWYC&amp;#39;; } } function waskillmouth($useline) { for($QJzCi=0;$QJzCi&amp;amp;lt;17;$QJzCi++) { xyUmji(); if(end()){ for($Kwc=0;$Kwc&amp;amp;lt;43;$Kwc++) { Iarray_diffsorry(); switch($too){ case &amp;#39;uJ&amp;#39;:{ so($arm)); } break; case &amp;#39;uBaeVj&amp;#39;:{ drunkfire($vShai)); } break; case &amp;#39;goalmorning&amp;#39;:{ wF()); } break; } echo &amp;#39;JsRigqyeFqGULCCMTzWFsIxV&amp;#39;; } } } function theywriting() { for($Vre=0;$Vre&amp;amp;lt;13;$Vre++) { futurematchstrlen($substr); if(parse_strcertain()){ for($bvs=0;$bvs&amp;amp;lt;33;$bvs++) { speedobjectlittle(); switch($KAXd){ case &amp;#39;deskfill&amp;#39;:{ aim()); } break; } for($cGw=0;$cGw&amp;amp;lt;32;$cGw++) { school(); switch($written){ case &amp;#39;dFgS&amp;#39;:{ catchlakehorse($numberoutside)); } break; } for($MYXoh=0;$MYXoh&amp;amp;lt;36;$MYXoh++) { wrongsilversing(); switch($hard){ case &amp;#39;sleepear&amp;#39;:{ forgetguess($visit)); } break; case &amp;#39;Ts&amp;#39;:{ storebowlor()); } break; case &amp;#39;three&amp;#39;:{ walkfinishexplain()); } break; } echo &amp;#39;ZtraCfcIaBqnWlBjcjaActgFeyIcyT&amp;#39;; } } } } } 领域驱动设计备忘录 前言领域驱动设计（Domain-D</description>
    </item>
    <item>
      <title>领域驱动设计中Components目录的作用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%ADComponents%E7%9B%AE%E5%BD%95%E7%9A%84%E4%BD%9C%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:20:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%ADComponents%E7%9B%AE%E5%BD%95%E7%9A%84%E4%BD%9C%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计中的components目录作用解析 领域驱动设计（Domain-Driven Design, DDD）是一种软件开发方法，它强调以业务领域为中心进行软件设计。在DDD中，components目录扮演着重要的角色。以下是对components目录作用的详细解析： 1. 组件的自闭环compo</description>
    </item>
    <item>
      <title>领域驱动设计小记 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%B0%8F%E8%AE%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:13:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%B0%8F%E8%AE%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>分层架构设计的意义 分层架构设计是一种软件开发的约定，它通过定义不同层的职责和依赖关系来明确代码和组件的组织方式。这有助于保持系统的稳定性和可维护性。 1. 代码组织和职责划分分层架构将系统分为多个逻辑层，每层都有其特定的职责，例如：表示层、业务逻辑层和数据访问层。这种划分有助于减少层之</description>
    </item>
    <item>
      <title>Spring Boot领域驱动设计概述 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/Spring-Boot%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:11:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/Spring-Boot%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计在Spring Boot中的应用 大家好，我是微赚淘客系统3.0的小编，也是一位在寒冷冬天坚持风度的程序猿。今天，我们将探讨领域驱动设计（Domain-Driven Design，简称DDD）在Spring Boot中的应用。 一、领域驱动设计概述 领域驱动设计是一种以业务领域为</description>
    </item>
    <item>
      <title>DDD领域驱动设计在CSDN博客的介绍 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8CSDN%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:09:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8CSDN%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计简介领域驱动设计（Domain-Driven Design, DDD）是一种以业务领域知识为核心的软件开发方法论。它通过深入理解业务领域，将业务逻辑与技术实现分离，以提高软件的可维护性、可扩展性和适应性。 DDD的关键概念- 领域（Domain）：特定业务领域或</description>
    </item>
    <item>
      <title>领域驱动设计整体理解 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%95%B4%E4%BD%93%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:07:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%95%B4%E4%BD%93%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计概述 领域驱动设计（Domain-Driven Design, DDD）是一种以业务领域为中心的软件开发方法论。它强调将业务知识与软件设计紧密结合，以实现软件系统与业务需求的高度一致性。 领域驱动设计的核心概念 领域（Domain）：指业务问题的范围或特定领域，是软件设计的核心。2. 驱动（</description>
    </item>
    <item>
      <title>领域驱动设计在B端营销系统的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8B%E7%AB%AF%E8%90%A5%E9%94%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:06:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8B%E7%AB%AF%E8%90%A5%E9%94%80%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>插： AI时代，程序员或多或少要了解些人工智能，前些天发现了一个巨牛的人工智能学习网站，通俗易懂，风趣幽默，忍不住分享一下给大家(前言 – 人工智能教程 ) 坚持不懈，越努力越幸运，大家一起学习鸭~~~ 1 背景 通过营销活动实现客户/用户拉新、留存和促活是业界普遍采用的方法。为实现商户增长和留</description>
    </item>
    <item>
      <title>领域驱动软件设计DDD实战课程大纲 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1DDD%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%A4%A7%E7%BA%B2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:02:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1DDD%E5%AE%9E%E6%88%98%E8%AF%BE%E7%A8%8B%E5%A4%A7%E7%BA%B2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（Domain-Driven Design, DDD） 领域驱动设计是一种软件设计哲学，专注于通过深入理解业务领域的复杂性来指导软件项目的设计和开发。DDD的核心在于与业务领域专家紧密合作，确保软件解决方案能够准确反映业务需求。 核心技术 领域模型（Domain Model）：反映业务领域的</description>
    </item>
    <item>
      <title>领域驱动设计（DDD）与领域建模 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E4%B8%8E%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:01:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E4%B8%8E%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计（Domain Driven Design，简称DDD）是一种以业务领域为中心的软件开发方法。它将软件开发的重点从技术层面转移到了业务领域，强调建立领域模型，实现业务概念与代码的映射。 一、领域模型的概念与设计 1. 领域模型的定义领域模型是对业务领域概念的抽象，</description>
    </item>
    <item>
      <title>领域驱动设计的优势及其在业务模型和系统开发中的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BC%98%E5%8A%BF%E5%8F%8A%E5%85%B6%E5%9C%A8%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:00:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BC%98%E5%8A%BF%E5%8F%8A%E5%85%B6%E5%9C%A8%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计（Domain-Driven Design，简称DDD）是一种软件开发方法论，由Eric Evans在其著作《领域驱动设计：软件核心复杂性应对之道》中提出。DDD继承了面向对象编程的优势，强调业务领域的划分和建模，通过明确领域、子领域和聚合等概念</description>
    </item>
    <item>
      <title>领域驱动设计（DDD）概述 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 10:59:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计 (DDD) 目录 引言 核心概念 领域 子域 限界上下文 实体 值对象 聚合 聚合根 领域服务 领域事件 DDD 实践 识别领域 定义限界上下文 建模实体和值对象 设计聚合和聚合根 实现领域服务 处理领域事件 总结 引言 领域驱动设计（Domain-Driven Design，DDD）是一种软件设计方法论，旨在通过关注核心领域</description>
    </item>
    <item>
      <title>领域驱动设计理解 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 10:58:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%90%86%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计概述 领域驱动设计（Domain Driven Design，简称DDD）是一种软件开发方法论，由埃里克·埃文斯（Eric Evans）在2004年通过其著作《领域驱动设计》提出。DDD的核心理念是软件的真正价值在于其解决领域问题的能力，而非其他功能特性。 领域驱动设计的核心思想 软件的核</description>
    </item>
    <item>
      <title>算法架构师对领域驱动设计DDD的讨论 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E7%AE%97%E6%B3%95%E6%9E%B6%E6%9E%84%E5%B8%88%E5%AF%B9%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E7%9A%84%E8%AE%A8%E8%AE%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 03:07:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E7%AE%97%E6%B3%95%E6%9E%B6%E6%9E%84%E5%B8%88%E5%AF%B9%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E7%9A%84%E8%AE%A8%E8%AE%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 领域驱动设计（DDD）是一种面向对象的建模设计思想，它以边界划分与控制为核心。DDD并非提供技术实现指导，而是作为一种设计思想，促进了软件系统分析与设计。随着微服务架构的兴起，DDD在软件领域的应用日益广泛，主流编程语言和框架也开始支持DDD，提供了丰富</description>
    </item>
    <item>
      <title>一文读懂领域驱动设计DDD --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 03:06:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述与实践 前言领域驱动设计（DDD） 是一种软件设计方法论，它通过将复杂业务领域分解为更小的子域，实现业务规则和知识的高效管理。本文将通过一个虚拟公司&amp;rsquo;RabbitTech&amp;rsquo;的业务场景，介绍DDD的基本概念及其落地实践。 领域与子域领域是</description>
    </item>
    <item>
      <title>DDD 第 2 部分：战术领域驱动设计 瓦丁 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD-%E7%AC%AC-2-%E9%83%A8%E5%88%86%E6%88%98%E6%9C%AF%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E7%93%A6%E4%B8%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 03:04:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD-%E7%AC%AC-2-%E9%83%A8%E5%88%86%E6%88%98%E6%9C%AF%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E7%93%A6%E4%B8%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>这是我们关于领域驱动设计 （DDD） 的深入系列文章的第二部分。第一部分讨论了战略性领域驱动设计，而在第三部分中，您将学习如何将领域驱动设计应用于使用 Java 和 Vaadin 的工作软件。2023 年更新。 在本文中，我们将学习战术领域驱动设计。 战术 DDD 是一组设计模式和构建基块，可用于设计域驱动系统。即使对于</description>
    </item>
    <item>
      <title>DDD 第 1 部分：战略领域驱动设计 瓦丁 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD-%E7%AC%AC-1-%E9%83%A8%E5%88%86%E6%88%98%E7%95%A5%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E7%93%A6%E4%B8%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 03:03:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD-%E7%AC%AC-1-%E9%83%A8%E5%88%86%E6%88%98%E7%95%A5%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1-%E7%93%A6%E4%B8%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>本文是我们关于领域驱动设计 （DDD） 的深入系列文章的第一部分。第二部分讨论战术 DDD，而在第三部分中，您将学习如何使用 Java 和 Vaadin 将 DDD 应用于工作软件。2023 年更新。 领域驱动设计 （DDD） 自 Eric Evans 于 2003 年出版有关该主题的书以来就一直存在。 几年前，当我加入一个遭受数据一致性问题困扰的项目时，</description>
    </item>
    <item>
      <title>DDD必备架构：六边形架构 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E5%BF%85%E5%A4%87%E6%9E%B6%E6%9E%84%E5%85%AD%E8%BE%B9%E5%BD%A2%E6%9E%B6%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 02:58:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E5%BF%85%E5%A4%87%E6%9E%B6%E6%9E%84%E5%85%AD%E8%BE%B9%E5%BD%A2%E6%9E%B6%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>架构设计是一种艺术，它涉及对系统进行合理分解与有效整合的过程。首先，通过&amp;rsquo;分离关注点&amp;rsquo;的策略，将复杂的系统拆解为多个相对独立的部分，这有助于我们更清晰地理解和管理各个组成部分。接着，在明确的原则和规则的指导下，对这些分离出来的组件进行精心设计和构建，以实现</description>
    </item>
    <item>
      <title>DDD技术方案落地实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 02:54:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、引言 领域驱动设计（Domain-Driven Design，简称DDD）作为一种软件开发方法论，其核心在于通过领域模型来指导软件设计和开发。从我初次接触DDD，到成功将旧系统改造为DDD模型，再到在三个项目中严格按照DDD规范进行开发，我经历了从疑惑到熟练的转变。现在，我将分享</description>
    </item>
    <item>
      <title>详解DDD洋葱架构 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E8%AF%A6%E8%A7%A3DDD%E6%B4%8B%E8%91%B1%E6%9E%B6%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 02:52:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E8%AF%A6%E8%A7%A3DDD%E6%B4%8B%E8%91%B1%E6%9E%B6%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（Domain-driven design，DDD）是一种软件开发方法，专注于应对复杂需求。它通过将软件实现与核心业务概念模型紧密结合，促进了对业务流程和规则的深入理解。 领域的定义 领域是指软件所涉及的业务知识范围。在DDD中，领域专家和开发人员共同构建领域模型，确保软件</description>
    </item>
    <item>
      <title>领域驱动设计及其模型概念解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%8F%8A%E5%85%B6%E6%A8%A1%E5%9E%8B%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 30 Jul 2024 12:59:16 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%8F%8A%E5%85%B6%E6%A8%A1%E5%9E%8B%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计(DDD)概述 领域驱动设计（Domain-Driven Design，简称DDD）是一种软件设计方法，由Eric Evans在2004年提出。它旨在帮助开发者更好地理解业务领域，并通过软件设计来解决业务问题。以下是对DDD的详细介绍和相关问题的解答。 一、DDD的基本概念 1.</description>
    </item>
    <item>
      <title>供应链商品域的DDD实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/%E4%BE%9B%E5%BA%94%E9%93%BE%E5%95%86%E5%93%81%E5%9F%9F%E7%9A%84DDD%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 30 Jul 2024 12:25:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/%E4%BE%9B%E5%BA%94%E9%93%BE%E5%95%86%E5%93%81%E5%9F%9F%E7%9A%84DDD%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在现代软件工程中，随着业务需求的不断增长和变化，软件系统的复杂性日益增加。领域驱动设计（Domain-Driven Design, DDD）作为一种应对复杂性的方法论，越来越受到重视。本文将从软件复杂性的来源、DDD的重要性以及其核心概念三个方面进行阐述。 一、软件复杂性的来源 软件复杂性主要源自以</description>
    </item>
    <item>
      <title>DDD建模系列（四）-- 知识铺 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/DDD%E5%BB%BA%E6%A8%A1%E7%B3%BB%E5%88%97%E5%9B%9B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 30 Jul 2024 11:44:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/DDD%E5%BB%BA%E6%A8%A1%E7%B3%BB%E5%88%97%E5%9B%9B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、管理面问题：传统scrum敏捷流程中的问题 设计和编码断层 在传统的迭代流程存在设计和编码断层，大致如下： 在软件开发的实践中，我们经常面临设计和编码之间的断层问题。一些团队在开发过程中，可能会因为时间压力或对需求的自信，而简化或忽略设计阶段，直接进入编码。这种做法虽然能够快速启动</description>
    </item>
    <item>
      <title>DDD实战篇：分层架构的代码结构 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/DDD%E5%AE%9E%E6%88%98%E7%AF%87%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E7%9A%84%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 30 Jul 2024 11:42:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/DDD%E5%AE%9E%E6%88%98%E7%AF%87%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E7%9A%84%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（Domain Driven Design, DDD）是一种软件设计方法论，它强调从业务领域出发，实现业务逻辑与代码结构的一致性。与传统的架构方法不同，DDD不将分析模型与实现模型分开对待。这意味着，通过合理的命名和代码结构，即便是非技术背景的人员也能够通过阅读代码来理解业务设计。 在领域驱动设计</description>
    </item>
    <item>
      <title>DDD核心理念解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/DDD%E6%A0%B8%E5%BF%83%E7%90%86%E5%BF%B5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 30 Jul 2024 11:41:51 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/DDD%E6%A0%B8%E5%BF%83%E7%90%86%E5%BF%B5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>探索技术深度，尽在&amp;rsquo;芋道源码&amp;rsquo;。每天上午10:33，我们准时为您推送技术精品文章，涵盖Java超神之路、源码解析等多个领域。从Dubbo、Netty到RocketMQ，再到Sharding-JDBC、MyCAT，我们深入挖掘每个技术细节，助您成为技术领域的</description>
    </item>
    <item>
      <title>DDD领域驱动设计四重边界知识概述 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9B%9B%E9%87%8D%E8%BE%B9%E7%95%8C%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 23 Jul 2024 14:53:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9B%9B%E9%87%8D%E8%BE%B9%E7%95%8C%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在DDD（领域驱动设计）中，四重边界是指分析边界、设计边界、实现边界和运行边界。这四个边界定义了软件开发的不同阶段应遵循的原则和策略。 分析边界 (Analysis Boundary)：确定业务问题范围，定义问题域。 设计边界 (Design Boundary)：根据领域模型划分限界上下文。 实现边界 (Implementation Boundary)</description>
    </item>
    <item>
      <title>查缺补漏：DDD核心概念梳理 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8FDDD%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E6%A2%B3%E7%90%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 23 Jul 2024 14:51:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8FDDD%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E6%A2%B3%E7%90%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>一、概述 二、DDD 是什么？ 三、DDD 架构分层 四、DDD 中各种 Object 五、领域分类 六、实现 DDD 流程 六、限界上下文和通用语言 七、实体 八、值对象 九、聚合和聚合根 十、领域事件 学习微服务和中台的必经之路就是 DDD ，这次我们来卷一波~ 一、概述 DDD 是什么，DDD 的英文全称是 Domain-Driven Design，翻译过来就是领域驱</description>
    </item>
    <item>
      <title>DDD落地实践：3&#43;1分段式模式解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240723/DDD%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B53&#43;1%E5%88%86%E6%AE%B5%E5%BC%8F%E6%A8%A1%E5%BC%8F%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 23 Jul 2024 08:29:27 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240723/DDD%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B53&#43;1%E5%88%86%E6%AE%B5%E5%BC%8F%E6%A8%A1%E5%BC%8F%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在软件开发过程中，领域驱动设计（DDD）是一种提升软件质量和可维护性的重要方法。然而，许多团队在实施DDD时遇到了诸多挑战。如何将领域模型有效地转化为代码，确保模型与代码的一致性，是许多开发者和团队面临的难题。 为了解决这些问题，经过多个团队的深入实践，探索出了一种“3+1”分段式</description>
    </item>
    <item>
      <title>DDD系列文章第7篇：可落地的DDD分层架构 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC7%E7%AF%87%E5%8F%AF%E8%90%BD%E5%9C%B0%E7%9A%84DDD%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:13:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC7%E7%AF%87%E5%8F%AF%E8%90%BD%E5%9C%B0%E7%9A%84DDD%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>『没有中间商赚差价』在商业领域里已经是深入人心，但在架构领域里往往是相反的，很多时候需要加入『中间商』来降低上下游系统的耦合。分层架构不仅仅在DDD很普遍，其他架构风格也是靠『分层』这把利器一路披荆斩棘。本篇来到研发最喜欢的DDD架构和代码部分，正所谓talk is cheap，sho</description>
    </item>
    <item>
      <title>DDD系列文章第6篇：领域建模那些事 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC6%E7%AF%87%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E9%82%A3%E4%BA%9B%E4%BA%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:11:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC6%E7%AF%87%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E9%82%A3%E4%BA%9B%E4%BA%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>业务逻辑的拆解其实就是团队提高业务理解达成共识的过程，为了让这个过程更加高效和可复制，其拆解方法和拆解结果需要通过某种形式固化下来。DDD里的领域模型就是一种很好的表达形式，DDD里还提出了多种领域模型来适配不同粒度的业务逻辑。因此领域模型就是业务逻辑的抽象。 有哪些领域模型？ DD</description>
    </item>
    <item>
      <title>DDD系列文章第3篇：DDD实施地图 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC3%E7%AF%87DDD%E5%AE%9E%E6%96%BD%E5%9C%B0%E5%9B%BE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:09:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC3%E7%AF%87DDD%E5%AE%9E%E6%96%BD%E5%9C%B0%E5%9B%BE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>全文4500字，预计阅读时间12分钟。 导读 前面两篇DDD系列文章第1篇：初识DDD和DDD系列文章第2篇：建立DDD的知识体系属于了解基本概念的理论部分，从本篇开始进入更为关键的DDD实践部分。本篇主要回答在项目里实施落地DDD首先需要考虑的几件事，比如我的项目适合实施DDD吗，</description>
    </item>
    <item>
      <title>DDD系列文章第2篇：建立DDD的知识体系 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC2%E7%AF%87%E5%BB%BA%E7%AB%8BDDD%E7%9A%84%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:08:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC2%E7%AF%87%E5%BB%BA%E7%AB%8BDDD%E7%9A%84%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>全文1700字，预计阅读时间5分钟。 导读： 继上篇的DDD系列文章第1篇：初识DDD之后，本篇介绍如何建立DDD的知识体系。让你的学习之路更顺畅。 01 — 向外看：借鉴他人的经验和思考 1.1 6本DDD书籍 书籍往往是最系统性思考的成果，具有比较高的阅读价值。DDD从2003年开始，国内外已有不</description>
    </item>
    <item>
      <title>DDD系列文章第1篇：初识DDD --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC1%E7%AF%87%E5%88%9D%E8%AF%86DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:07:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E7%AC%AC1%E7%AF%87%E5%88%9D%E8%AF%86DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>全文3073字，预计阅读时间8分钟。 导读：本号计划通过一个DDD系列文章全面介绍DDD，包括初识DDD、DDD的知识体系、实施方法和路径、如何领域建模、DDD的分层架构、领域事件架构落地、DDD和BFF、DDD和API First、案例剖析等方面的细节。本篇作为第一篇先尝试回答DD</description>
    </item>
    <item>
      <title>DDD领域驱动工程落地实战 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E5%B7%A5%E7%A8%8B%E8%90%BD%E5%9C%B0%E5%AE%9E%E6%88%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:05:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E5%B7%A5%E7%A8%8B%E8%90%BD%E5%9C%B0%E5%AE%9E%E6%88%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>大家好，我是Jensen。一个想和大家一起打怪升级的程序员朋友。 我在公司对支付业务、结算业务、资金业务使用DDD进行领域建模的两年，得到了许多好评，也面对过不少质疑，总体来说还是能收获不少，这对团队成员理解业务起着很大作用。近半年一直在研究DDD的落地实战，如今已修得阶段性成果，</description>
    </item>
    <item>
      <title>可实施的领域驱动设计（DDD）详解 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E5%8F%AF%E5%AE%9E%E6%96%BD%E7%9A%84%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 07:04:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E5%8F%AF%E5%AE%9E%E6%96%BD%E7%9A%84%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计的概念 大家都知道软件开发不是一蹴而就的事情，我们不可能在不了解产品(或行业领域)的前提下进行软件开发，在开发前通常需要进行大量的业务知识梳理，然后才能到软件设计的层面，最后才是开发。而在业务知识梳理的过程中，必然会形成某个领域知识，根据领域知识来一步步驱动软件设计，就</description>
    </item>
    <item>
      <title>领域驱动设计实战落地解惑 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%88%98%E8%90%BD%E5%9C%B0%E8%A7%A3%E6%83%91--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:59:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%88%98%E8%90%BD%E5%9C%B0%E8%A7%A3%E6%83%91--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>软件开发不是一蹴而就的事情，我们不可能在不了解产品（或行业领域）的前提下进行软件开发，在开发前，通常需要进行大量的业务知识梳理，而后到达软件设计的层面，最后才是开发。而在业务知识梳理的过程中，我们必然会形成某个领域知识，根据领域知识来一步步驱动软件设计，就是领域驱动设计（DDD）</description>
    </item>
    <item>
      <title>DDD专题案例一《初识领域驱动设计DDD落地方案》 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E4%B8%93%E9%A2%98%E6%A1%88%E4%BE%8B%E4%B8%80%E5%88%9D%E8%AF%86%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%90%BD%E5%9C%B0%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:52:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E4%B8%93%E9%A2%98%E6%A1%88%E4%BE%8B%E4%B8%80%E5%88%9D%E8%AF%86%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%90%BD%E5%9C%B0%E6%96%B9%E6%A1%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>作者：付政委 纳百川、吞吐、成自卧龙，笑红尘、纷繁、当乃胸容 微信公众号：bugstack虫洞栈 领取驱动设计DDD{Domain-Driven Design}历史较长但随着微服务的兴起DDD又活跃到开发工程师的视线。它提供的是一套架构设计思想，我们可以使用这套方法论将架构设计的尽可能做</description>
    </item>
    <item>
      <title>DDD落地实践指南 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:49:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>引言 在之前的文章讨论了为什么要用DDD后，相信会产生DDD如何落地的疑惑。在经过一段DDD落地实践后我总结了一些经验，这篇文章将带领大家看一下我眼中的DDD。 顶层视图——从一个用户查询推荐商品列表说起 我们以用户登录一个网购平台后从后台获取被推荐商品的场景为例。外部请求进入后台服务</description>
    </item>
    <item>
      <title>DDD落地难的原因分析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E8%90%BD%E5%9C%B0%E9%9A%BE%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:45:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E8%90%BD%E5%9C%B0%E9%9A%BE%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>本文选自互联网公开材料，作者：和坚 为什么DDD落地难？ DDD的目标是什么？ （没有发言权，DDD推不起来？！！！&amp;mdash;-你是说真的吗？） 业界良心张逸老师DDD课程再次推荐 如果说这个课非得有一个改进点的话，就是学完之后要看更多的书。 往期推荐 DDD-没那么难！ 15人创业团队如何</description>
    </item>
    <item>
      <title>如何利用领域驱动设计(DDD)进行微服务划分 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%BF%9B%E8%A1%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%88%92%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:44:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E8%BF%9B%E8%A1%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%88%92%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>摘要 在前面一篇介绍了如何通过DDD的思想，来调整单体服务内的工程结构，为微服务的拆分做准备。同时介绍了我们在进行微服务拆分的时候踩过的一些坑。 这篇介绍下我们最终的方案，不一定对，欢迎留言讨论。 微服务划分 问题分析 上篇介绍过我们一开始的服务划分标准 一个领域一个服务的规则去拆分， 同时为</description>
    </item>
    <item>
      <title>深入理解领域驱动设计中的聚合 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%81%9A%E5%90%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:38:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%81%9A%E5%90%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>聚合模式是 DDD 的模式结构中较为难于理解的一个，也是 DDD 学习曲线中的一个关键障碍。合理地设计聚合，能清晰地表述业务一致性，也更容易带来清晰的实现，设计不合理的聚合，甚至在设计中没有聚合的概念，则相反。 聚合的概念并不复杂。本文希望能回到聚合的本质，对聚合的定义和实操给出一些有价值的建议。</description>
    </item>
    <item>
      <title>浅谈领域驱动设计中的聚合 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E6%B5%85%E8%B0%88%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%81%9A%E5%90%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:37:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E6%B5%85%E8%B0%88%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E8%81%9A%E5%90%88--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在我看来并不是MVC的基础上增加领域层，使用充血模型，解耦基础服务，我的代码就符合DDD了。 为什么要使用DDD？ DDD分为战略部分跟战术部分，相信大家都认同DDD的核心在战略而非战术。而战略方面的核心我认为在业务建模，领域划分、统一语言等都在为业务建模服务。 为什么业务建模重要? 以</description>
    </item>
    <item>
      <title>领域驱动设计DDD的入门与代码实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E7%9A%84%E5%85%A5%E9%97%A8%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:34:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E7%9A%84%E5%85%A5%E9%97%A8%E4%B8%8E%E4%BB%A3%E7%A0%81%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>阿里妹导读 在本文中，作者将借鉴《实现领域驱动设计》的做法，介绍领域驱动设计的基本概念的同时，用一个虚拟的公司和一个虚拟的项目，把领域驱动设计进行落地实践。 背景 为什么要写这篇文章 我是从2018年开始接触领域驱动设计（DDD），当时在前辈的推荐下拜读过Eric Evans的《领域驱动设</description>
    </item>
    <item>
      <title>深入理解DDD领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:29:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>摘要 领域驱动设计（DDD）是一种处理复杂业务领域的软件设计方法。它通过将实现连接到不断发展的模型来满足复杂需求，适用于复杂领域和大型应用，而不是简单的CRUD应用。 1 DDD的核心思想是将业务领域作为软件开发的中心，通过与领域专家紧密合作，将领域知识转化为高质量的软件模型。它强调开</description>
    </item>
    <item>
      <title>DDD领域驱动设计核心概念与原则 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%8E%9F%E5%88%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:28:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%8E%9F%E5%88%99--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD 领域驱动设计的核心概念和原则是什么？ 领域驱动设计（DDD）是一种基于模型驱动的软件设计方法，旨在通过建立领域模型来有效解决复杂的业务问题。以下是DDD的核心概念和原则： 核心概念 领域（Domain）：业务相关知识的集合，指特定范围或区域，用来确定范围和边界。 子域（Sub Domai</description>
    </item>
    <item>
      <title>基于领域驱动设计实现订单系统 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E5%9F%BA%E4%BA%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:22:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E5%9F%BA%E4%BA%8E%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>基于领域驱动设计 (DDD) 四层架构实现订单系统 DDD 四层架构包括用户界面层 (UI)、应用层 (Application)、领域层 (Domain)、和基础设施层 (Infrastructure)。我们将按此结构实现订单系统。 项目结构 首先，让我们定义项目结构： src ├── main │ ├── java │ │ └── com │ │ └──</description>
    </item>
    <item>
      <title>领域驱动设计在订单与支付系统的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E8%AE%A2%E5%8D%95%E4%B8%8E%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:21:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E8%AE%A2%E5%8D%95%E4%B8%8E%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计 (DDD) 应用于订单系统和支付系统 简介 在现代软件开发中，领域驱动设计 (DDD) 已成为构建复杂业务系统的有效方法。本文将深入探讨如何将 DDD 原则应用于订单系统和支付系统的设计，提供实际示例和最佳实践，帮助开发者创建高效、可扩展的系统。 目录 什么是领域驱动设计 (DDD)？ DDD 的定义 DDD 的重要性 主要</description>
    </item>
    <item>
      <title>深入理解领域驱动设计（DDD） --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:20:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>深入理解领域驱动设计（DDD） 介绍 领域驱动设计（Domain-Driven Design, DDD）是由Eric Evans在其2003年出版的同名书中首次提出的一种软件开发方法论。DDD的核心思想是通过聚焦业务领域和领域专家，构建复杂系统，从而更好地应对软件开发中的各种复杂性。DDD不仅是一套技</description>
    </item>
    <item>
      <title>DDD领域驱动设计落地实践案例分析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:03:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD领域驱动设计落地实践案例分析 思想：DDD的思想源于2003年Eric Evans编写的“Domain-Driven Design领域驱动设计”1。DDD是一套综合软件系统分析和设计的面向对象建模方法1。 服务器后端发展三个阶段1： 面向过程脚本 面向数据库表 面向业务模型：DDD+SO</description>
    </item>
    <item>
      <title>事件风暴 - 操作方法 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4-%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 05:44:16 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4-%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>事件风暴 — 操作方法 领域驱动设计（DDD）是一种流行的软件设计方法，它关注业务领域和相应的规则[1]。它旨在通过建立相应的模型和语言，使所有利益相关者（客户、开发人员等）对当前问题达成共识。在此过程中，最值得注意的是，它在架构（战略设计）和实现（战术设计）之间架起了一座桥梁[2]。</description>
    </item>
    <item>
      <title>领域建模、服务和Nikolaos Papagrigoriu的知识分享 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1%E5%92%8CNikolaos-Papagrigoriu%E7%9A%84%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:16:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1%E5%92%8CNikolaos-Papagrigoriu%E7%9A%84%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>在设计领域模型时，突出的建模范例是对象，因此我们将概念（即名词）映射到 DDD 构建块（例如实体和值对象）。与这些概念相关的行为被映射到使用动词的方法。 然而，我们希望在模型中定义一些特定于领域的函数，但不能将其附加到现有的实体或值对象中（Evans，2003）。 Evans (2003) 引入了域服务的概念，而</description>
    </item>
    <item>
      <title>一文读懂 DDD 领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82-DDD-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 10 Jul 2024 01:15:24 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82-DDD-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1. 领域驱动设计简介 1.1 什么是领域驱动设计 2004 年埃里克·埃文斯（Eric Evans）发表了《领域驱动设计》（Domain-Driven Design –Tackling Complexity in the Heart of Software）这本书，从此领域驱动设计（Domain Driven Design，简称 DDD）诞生。DDD 核心思想是通过领域驱动设计</description>
    </item>
    <item>
      <title>领域驱动设计的实践与应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:52:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>置顶 A__17 已于 2024-04-08 17:22:44 修改 目录 一、前言 二、DDD是什么？ 三、DDD的职责： 复杂系统的应对： 微服务架构： DDD架构： 四、DDD相关概念： 领域 限界上下文(Bounded Context) 统一语言 五、DDD的实现： 战略建模 内容： 划分限界上下文 限界上下文之间的映射关系(Context Mapping) 战术建模： 内容： 模块(Mo</description>
    </item>
    <item>
      <title>DDD领域驱动设计模型介绍 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:51:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>什么是领域驱动设计模型？ DDD全称为(Domain-Driven Design,简称DDD)，领域驱动设计 基础概念 领域： 领域是DDD中最大的概念，主要确定边界范围，领域又分为核心域（核心业务逻辑）、通用域（公共业务逻辑）、支撑域（基础第三方业务逻辑）； 界限上下文：在界限上下文中要建</description>
    </item>
    <item>
      <title>DDD领域建模总结 - 领域驱动设计的实践与思考 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%80%BB%E7%BB%93-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E6%80%9D%E8%80%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:46:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E6%80%BB%E7%BB%93-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E6%80%9D%E8%80%83--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计 DDD 参考地址： 《DDD领域驱动设计基本理论知识总结》 《关于领域驱动设计（DDD）中聚合设计的一些思考》 《基于 MVC 实践领域驱动（DDD）的思考》 《【DDD】领域驱动设计实践 —— 限界上下文识别》 一. DDD 简述 DDD (Domain-Driven Design)，即领域驱动设计是思考问题的方法论，用于对实际问题建模</description>
    </item>
    <item>
      <title>领域驱动设计实战 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%88%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:39:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E6%88%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>摘要 通过实战，让大家更加的理解和应用DDD在自己的项目中，实战如何用 DDD 设计思想构建企业级可复用的中台业务模型，了解事件风暴以及用事件风暴构建领域模型的过程。带你了解如何用 DDD 设计微服务代码模型，如何从领域模型完成微服务设计，建立领域模型与微服务代码模型的映射关系，如何完成微服务的架</description>
    </item>
    <item>
      <title>DDD领域驱动最全详解(图文全面总结) --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E6%9C%80%E5%85%A8%E8%AF%A6%E8%A7%A3%E5%9B%BE%E6%96%87%E5%85%A8%E9%9D%A2%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:20:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E6%9C%80%E5%85%A8%E8%AF%A6%E8%A7%A3%E5%9B%BE%E6%96%87%E5%85%A8%E9%9D%A2%E6%80%BB%E7%BB%93--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>来源：mikechen的互联网架构 DDD是现在非常火热的，而且大厂面试也经常考察，下面我就全面来详解DDD领域驱动设计 DDD全称是Domain-Driven Design，翻译过来就是领域驱动设计，DDD 架构是一种软件设计方法论。 如下图所示： DDD架构的作用 DDD架构通过边界划分，</description>
    </item>
    <item>
      <title>DDD - 一文读懂DDD领域驱动设计 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD-%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:17:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD-%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>DDD - 一文读懂DDD领域驱动设计 1. 领域驱动设计简介 1.1 什么是领域驱动设计 2004 年埃里克·埃文斯（Eric Evans）发表了《领域驱动设计》（Domain-Driven Design –Tackling Complexity in the Heart of Software）这本书，从此领域驱动设计（Domain Driven Design，简称 DDD）诞生。D</description>
    </item>
    <item>
      <title>领域驱动设计（DDD）学习应用 - 小诚信驿站的实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%AD%A6%E4%B9%A0%E5%BA%94%E7%94%A8-%E5%B0%8F%E8%AF%9A%E4%BF%A1%E9%A9%BF%E7%AB%99%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:16:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1DDD%E5%AD%A6%E4%B9%A0%E5%BA%94%E7%94%A8-%E5%B0%8F%E8%AF%9A%E4%BF%A1%E9%A9%BF%E7%AB%99%E7%9A%84%E5%AE%9E%E8%B7%B5--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>责任申明 本文部分资料来源《极客时间的领域驱动设计课程》，目前是一门讲 DDD 的课程，大家可以去购买！我这里通过自己的理解进行下笔记整理和如何应用我们的业务系统场景。 另外资料来源领域驱动设计书和 B 站上的 DDD 领域驱动设计分享。地址传送门：https://www.bilibili.com/vi</description>
    </item>
    <item>
      <title>DDD领域驱动设计学习应用·小诚信驿站·InfoQ写作社区 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:15:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AD%A6%E4%B9%A0%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>责任申明 本文部分资料来源《极客时间的领域驱动设计课程》，目前是一门讲 DDD 的课程，大家可以去购买！我这里通过自己的理解进行下笔记整理和如何应用我们的业务系统场景。 另外资料来源领域驱动设计书和 B 站上的 DDD 领域驱动设计分享。地址传送门：https://www.bilibili.com/vi</description>
    </item>
    <item>
      <title>DDD 落地两大步骤，以及Repository核心模式 - 知识铺 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD-%E8%90%BD%E5%9C%B0%E4%B8%A4%E5%A4%A7%E6%AD%A5%E9%AA%A4%E4%BB%A5%E5%8F%8ARepository%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 09 Jul 2024 04:09:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD-%E8%90%BD%E5%9C%B0%E4%B8%A4%E5%A4%A7%E6%AD%A5%E9%AA%A4%E4%BB%A5%E5%8F%8ARepository%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>FSAC未来超级架构师 架构师总动员 实现架构转型，再无中年危机 说在前面 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线互联网企业如阿里、滴滴、极兔、有赞、希音、百度、网易、美团的面试资格，遇到很多很重要的面试题： 谈谈你的DDD落地经验？ 谈谈你对DDD的理解？ 最近</description>
    </item>
    <item>
      <title>DDD架构落地实操指南与面试解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/DDD%E6%9E%B6%E6%9E%84%E8%90%BD%E5%9C%B0%E5%AE%9E%E6%93%8D%E6%8C%87%E5%8D%97%E4%B8%8E%E9%9D%A2%E8%AF%95%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 08 Jul 2024 12:56:21 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/DDD%E6%9E%B6%E6%9E%84%E8%90%BD%E5%9C%B0%E5%AE%9E%E6%93%8D%E6%8C%87%E5%8D%97%E4%B8%8E%E9%9D%A2%E8%AF%95%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>尼恩说在前面： 在40岁老架构师 尼恩的读者交流群(50+)中，最近有小伙伴拿到了一线互联网企业如字节、阿里、滴滴、极兔、有赞、希音、百度、网易、美团的面试资格，遇到很多很重要的面试题： DDD架构，如何落地？ 谈谈你的DDD落地经验？ 谈谈你对DDD的理解？ 如何保证RPC代码不会腐烂，升</description>
    </item>
    <item>
      <title>阿里巴巴文娱领域驱动设计实践解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240627/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%96%87%E5%A8%B1%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 08 Jul 2024 12:47:21 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240627/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%96%87%E5%A8%B1%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>阿里妹导读：什么是领域驱动设计？传统分层架构在实际开发中存在哪些问题？业务开发人员如何设计并搭建自己的领域模型？阿里文娱技术专家战獒将为大家一一解答，并分享文娱在领域驱动设计上的实践。 文末福利：下载《为业务量身打造——阿里文娱用户及内容运营平台技术实践》电子书。 一 什么是领域驱动设</description>
    </item>
  </channel>
</rss>
