<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go语言 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/Go%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in Go语言 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 05 Aug 2024 01:02:02 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/Go%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go1.23版本发布，解决time.After内存泄露问题 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/Go1.23%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%E8%A7%A3%E5%86%B3time.After%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:02:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/Go1.23%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%E8%A7%A3%E5%86%B3time.After%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E9%97%AE%E9%A2%98--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Go 语言内存泄露问题与新版本改进解析 一、内存泄露问题缘起在 Go 语言编程中，time.After 常被用于实现定时任务或延迟操作。然而，如果不正确处理其生命周期，易引发内存泄露问题。内存泄露会随程序运行逐渐累积，影响性能和稳定性。 二、Go 1.23 版本中的变化Go 1.23 版本对 time.NewTimer 和 Time.NewTicker 进行了重要改进： Timer</description>
    </item>
  </channel>
</rss>
