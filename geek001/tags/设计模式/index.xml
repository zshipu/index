<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 05 Aug 2024 01:25:02 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>领域驱动设计在对象使用中的时机 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8%E4%B8%AD%E7%9A%84%E6%97%B6%E6%9C%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 05 Aug 2024 01:25:02 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%9C%A8%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8%E4%B8%AD%E7%9A%84%E6%97%B6%E6%9C%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计（DDD）概述 何时使用领域驱动设计？领域驱动设计（DDD）并非架构风格或模式，也非软件开发方法论。它是一种面向业务的应用程序架构设计方法。当项目团队在需求分析中不断考虑如何设计业务对象，并且梳理领域知识时，就已经在实践DDD。更精确的问题应是：如何选择适合的架构风格来</description>
    </item>
    <item>
      <title>DDD设计方法在新项目中的应用 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/DDD%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95%E5%9C%A8%E6%96%B0%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 02:51:19 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/DDD%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95%E5%9C%A8%E6%96%B0%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言在软件开发中，领域驱动设计（DDD）是一种重要的方法论，它帮助我们更好地理解和设计复杂系统。本文将探讨如何从零开始，运用DDD对新项目进行划分与架构设计。 一、专业术语解释在讨论DDD之前，我们首先需要了解一些基础的云计算服务术语：- IAAS：基础设施即服务，指的是将计算基础设</description>
    </item>
    <item>
      <title>Java Spring Boot 微服务架构中的关键组件和设计模式 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/Java-Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E5%92%8C%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:26:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/Java-Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E5%92%8C%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>抽象 本文探讨了 Java Spring Boot 微服务架构中使用的基本组件和设计模式，为开发人员构建可扩展、灵活且有弹性的应用程序提供了全面的指南。 Spring Boot 通过提供一系列用于构建独立生产级应用程序的工具和约定，简化了 Java 应用程序（尤其是微服务）的开发。1 微服务架构是一种方法，其中将大型应用程序分解为较小的、松散耦</description>
    </item>
  </channel>
</rss>
