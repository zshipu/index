<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pac4j-Cas on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/pac4j-cas/</link>
    <description>Recent content in Pac4j-Cas on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 28 Apr 2024 06:57:08 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/pac4j-cas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot集成Pac4j-Cas实现单点登录的完整示例 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90Pac4j-Cas%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:57:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/SpringBoot%E9%9B%86%E6%88%90Pac4j-Cas%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>前言： 之前项目使用springmvc开发的cas client,由于以后新项目需要改用springboot开发，所以需要使用springboot来实现cas的单点登录、并完成对自定义需求的实现；之前使用shiro-cas,官方在1.3版本已经标注了过时，根据推荐使用了pac4j-c</description>
    </item>
    <item>
      <title>Pac4j-cas集成与验证流程解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E4%B8%8E%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:55:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E4%B8%8E%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>注意↓↓↓↓ 其实直接调用 http://cas服务/serviceValidate?service=xxx&amp;amp;ticket=xxx就能校验和获取用户信息了 这里将pac4j-cas的代码拷出来改, 也是方便理解它做了哪些事情. 一. 关于pac4j-cas 这几天一直在折腾pac4j-</description>
    </item>
    <item>
      <title>Pac4j-cas集成和前后端分离JWT验证流程解析 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E5%92%8C%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBJWT%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:19:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Pac4j-cas%E9%9B%86%E6%88%90%E5%92%8C%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BBJWT%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>注意↓↓↓↓ 其实直接调用 http://cas服务/serviceValidate?service=xxx&amp;amp;ticket=xxx就能校验和获取用户信息了 这里将pac4j-cas的代码拷出来改, 也是方便理解它做了哪些事情. 一. 关于pac4j-cas 这几天一直在折腾pac4j-</description>
    </item>
  </channel>
</rss>
