<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/Spring-Boot/</link>
    <description>Recent content in Spring Boot on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 06 Aug 2024 06:04:54 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/Spring-Boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DDD领域驱动设计在Spring Boot中的落地实践 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/02-%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E5%A4%87-DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B9%8B%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5_springboot-ddd--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 06 Aug 2024 06:04:54 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/02-%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E5%A4%87-DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E4%B9%8B%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5_springboot-ddd--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>系列文章目录 01 使用Gradle构建多模块项目 - 02 架构师必备 - DDD领域驱动设计之落地实践 - 03 异常处理实践 - 抛异常+错误码 前言 在软件开发过程中，我们经常会遇到一些架构设计上的挑战。本文将探讨如何使用领域驱动设计（DDD）来解决这些问题，并介绍在项目Yanx中的实际应用。 传统三层架构</description>
    </item>
    <item>
      <title>Spring Boot领域驱动设计概述 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240730/Spring-Boot%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 31 Jul 2024 11:11:45 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240730/Spring-Boot%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E6%A6%82%E8%BF%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>领域驱动设计在Spring Boot中的应用 大家好，我是微赚淘客系统3.0的小编，也是一位在寒冷冬天坚持风度的程序猿。今天，我们将探讨领域驱动设计（Domain-Driven Design，简称DDD）在Spring Boot中的应用。 一、领域驱动设计概述 领域驱动设计是一种以业务领域为</description>
    </item>
    <item>
      <title>Spring Boot 微服务中的 API 网关实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84-API-%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:27:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84-API-%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Java Spring Boot 微服务架构中使用了哪些关键组件和设计模式？ 在 Java Spring Boot 微服务架构中，几个关键组件和设计模式对于构建可扩展、灵活且健壮的应用程序至关重要。以下是此类体系结构中使用的主要组件和设计模式： 关键部件 API 网关：充当所有客户端的单一入口点，将请求路由到适当的微服务并聚合结果。它简化了客户端交</description>
    </item>
    <item>
      <title>Java Spring Boot 微服务架构中的关键组件和设计模式 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/Java-Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E5%92%8C%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:26:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/Java-Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E5%92%8C%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>抽象 本文探讨了 Java Spring Boot 微服务架构中使用的基本组件和设计模式，为开发人员构建可扩展、灵活且有弹性的应用程序提供了全面的指南。 Spring Boot 通过提供一系列用于构建独立生产级应用程序的工具和约定，简化了 Java 应用程序（尤其是微服务）的开发。1 微服务架构是一种方法，其中将大型应用程序分解为较小的、松散耦</description>
    </item>
    <item>
      <title>Java Spring Boot 微服务架构关键组件与设计模式 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/Java-Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:24:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/Java-Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%85%B3%E9%94%AE%E7%BB%84%E4%BB%B6%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Java Spring Boot 微服务架构中使用了哪些关键组件和设计模式？ 在 Java Spring Boot 微服务架构中，几个关键组件和设计模式对于构建可扩展、灵活且健壮的应用程序至关重要。以下是此类体系结构中使用的主要组件和设计模式： 关键部件 API 网关：充当所有客户端的单一入口点，将请求路由到适当的微服务并聚合结果。它简化了客户端交</description>
    </item>
    <item>
      <title>Spring Boot中使用Spring Validation进行参数校验 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8Spring-Validation%E8%BF%9B%E8%A1%8C%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:33:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8Spring-Validation%E8%BF%9B%E8%A1%8C%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>title 引入jar包 接收实体类上添加@NotBlank注解，Controller接口加上@Valid注解 最后利用全局异常捕获异常，返回提示 接下来前端传入password为空测试一下 注：常用的注解 引入jar包 1 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-validation&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.4.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Spring boot 2.3版本后，验证类在这个包下，所以引入这一个包即可 接收实体类上</description>
    </item>
    <item>
      <title>Spring Boot集成Shiro的详细教程 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Spring-Boot%E9%9B%86%E6%88%90Shiro%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:22:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Spring-Boot%E9%9B%86%E6%88%90Shiro%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>项目里一直用的是 spring-security ，不得不说，spring-security 真是东西太多了，学习难度太大(可能我比较菜)，这篇博客来总结一下折腾shiro的成果，分享给大家，强烈推荐shiro，真心简单 : ) 引入依赖 &amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;dependency&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;groupId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;org.apache.shiro&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/groupId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;artifactId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;shiro-spring&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/artifactId&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;version&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;1.4.0&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/version&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&amp;amp;lt;/dependency&amp;amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt; 用户，角色，权限 就是经典的RBAC权限系统，下面简单给一下实体类字段 AdminUser.java &amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;public&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;class&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;</description>
    </item>
    <item>
      <title>Spring Boot REST API Controller CRUD Operations --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-REST-API-Controller-CRUD-Operations--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 06 May 2024 02:00:32 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-REST-API-Controller-CRUD-Operations--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>了解如何在 Spring Boot 应用程序中使用 Spring MVC @RestController注释创建 REST API 控制器。我们将学习编写用于执行 CRUD（创建、读取、更新、删除）操作的 REST API。 1. Maven 在开始编写实际的 REST 控制器逻辑之前，我们必须在项目中导入必要的依赖项。Spring boot 的 spring-boot-starter-web 模块可传递导入所有必要的依赖项，例如</description>
    </item>
    <item>
      <title>Spring Boot教程：使用Spring MVC @RestController创建REST API --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Spring-Boot%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8Spring-MVC-@RestController%E5%88%9B%E5%BB%BAREST-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:18:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Spring-Boot%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8Spring-MVC-@RestController%E5%88%9B%E5%BB%BAREST-API--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>了解如何在 Spring Boot 应用程序中使用 Spring MVC @RestController注释创建 REST API 控制器。我们将学习编写用于执行 CRUD（创建、读取、更新、删除）操作的 REST API。 1. Maven 在开始编写实际的 REST 控制器逻辑之前，我们必须在项目中导入必要的依赖项。Spring boot 的 spring-boot-starter-web 模块可传递导入所有必要的依赖项，例如</description>
    </item>
    <item>
      <title>Spring Boot 教程：使用 Spring MVC 创建 REST API 控制器 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8-Spring-MVC-%E5%88%9B%E5%BB%BA-REST-API-%E6%8E%A7%E5%88%B6%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:17:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240505/Spring-Boot-%E6%95%99%E7%A8%8B%E4%BD%BF%E7%94%A8-Spring-MVC-%E5%88%9B%E5%BB%BA-REST-API-%E6%8E%A7%E5%88%B6%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>了解如何在 Spring Boot 应用程序中使用 Spring MVC @RestController注释创建 REST API 控制器。我们将学习编写用于执行 CRUD（创建、读取、更新、删除）操作的 REST API。 1. Maven 在开始编写实际的 REST 控制器逻辑之前，我们必须在项目中导入必要的依赖项。Spring boot 的 spring-boot-starter-web 模块可传递导入所有必要的依赖项，例如</description>
    </item>
    <item>
      <title>Spring Boot项目集成Shiro和CAS时认证失败问题解决 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90Shiro%E5%92%8CCAS%E6%97%B6%E8%AE%A4%E8%AF%81%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 07:01:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90Shiro%E5%92%8CCAS%E6%97%B6%E8%AE%A4%E8%AF%81%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>项目场景： 项目采用spring boot+shiro+cas配置，由于数据库原因，登录时认证失败，记录一下解决过程。 问题描述： cas验证用户成功后，到shiro自定义的realm中执行doGetAuthenticationInfo方法时，抛出NullPointerException</description>
    </item>
    <item>
      <title>Spring Boot集成Shiro安全框架的实战博客 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%9B%86%E6%88%90Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E6%88%98%E5%8D%9A%E5%AE%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Sun, 28 Apr 2024 06:30:08 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240428/Spring-Boot%E9%9B%86%E6%88%90Shiro%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AE%9E%E6%88%98%E5%8D%9A%E5%AE%A2--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>原博文 2020-02-13 10:42 − &amp;hellip; 0 3484 2019-12-24 08:00 − 1.什么是会话session : 用户和程序直接的链接，程序可以根据session识别到哪个用户，和javaweb中的session类似 2. 什么是会话管理器SessionManager : 会话管理器管理所有subject的所有操作，是shiro的核心组件,&amp;hel</description>
    </item>
    <item>
      <title>使用Spring Boot和Shiro集成Pac4j实现CAS单点登录 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-Boot%E5%92%8CShiro%E9%9B%86%E6%88%90Pac4j%E5%AE%9E%E7%8E%B0CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:32:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E4%BD%BF%E7%94%A8Spring-Boot%E5%92%8CShiro%E9%9B%86%E6%88%90Pac4j%E5%AE%9E%E7%8E%B0CAS%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>新开的项目，果断使用 spring boot 最新版本 2.0.3 ，免得后期升级坑太多，前期把雷先排了。 由于对 shiro 比较熟，故使用 shiro 来做权限控制。同时已经存在了 cas 认证中心， shiro 官方在 1.2 中就表明已经弃用了 CasFilter ，建议使用 buji-pac4j ，故使用 pac4j 来做单点登录的控制。 废话不说，代码如下： 2018-08-29更新：由于pac4j 3.1 版本未支持</description>
    </item>
    <item>
      <title>利用Spring Boot和GraphQL实现实时数据推送 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/%E5%88%A9%E7%94%A8Spring-Boot%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%95%B0%E6%8D%AE%E6%8E%A8%E9%80%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:23:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/%E5%88%A9%E7%94%A8Spring-Boot%E5%92%8CGraphQL%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%95%B0%E6%8D%AE%E6%8E%A8%E9%80%81--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>随着互联网的发展和技术的进步，越来越多的应用程序对实时数据的需求日益增加。从社交网络到在线游戏，从即时通讯到金融交易，实时数据对于许多应用场景都至关重要。为了满足这种需求，开发人员需要一种高效、灵活的解决方案来实现数据的实时推送。在本文中，我们将探讨如何利用Spring Boot和</description>
    </item>
    <item>
      <title>Spring Boot GraphQL服务构建与多端数据统一访问 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot-GraphQL%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA%E4%B8%8E%E5%A4%9A%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%BB%9F%E4%B8%80%E8%AE%BF%E9%97%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:18:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot-GraphQL%E6%9C%8D%E5%8A%A1%E6%9E%84%E5%BB%BA%E4%B8%8E%E5%A4%9A%E7%AB%AF%E6%95%B0%E6%8D%AE%E7%BB%9F%E4%B8%80%E8%AE%BF%E9%97%AE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：九极客 欢迎星标关注九极客，一起探讨技术与架构！ 大家的点赞、收藏和评论很重要，如文章对您有帮助还请转发支持下，谢谢！ 图注:大少公众号 GraphQL是一种用于API的查询语言，旨在提供对客户端的灵活而高效的数据访问。与传统的RESTful API相比，GraphQL允许客户</description>
    </item>
    <item>
      <title>GraphQL介绍与Spring Boot GraphQL实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:12:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.Graphql介绍 重试 错误原因 GraphQL 是一个用于 API 的查询语言，是一个使用基于类型系统来执行查询的服务端运行时（类型系统由你的数据定义）。GraphQL 并没有和任何特定数据库或者存储引擎绑定，而是依靠你现有的代码和数据支撑。 优势 GraphQL 速度快，并且比较稳定，GraphQL 的操作是在数据层面</description>
    </item>
    <item>
      <title>Spring Boot中使用GraphQL应对数据需求变化 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8GraphQL%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E9%9C%80%E6%B1%82%E5%8F%98%E5%8C%96--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:06:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E4%B8%AD%E4%BD%BF%E7%94%A8GraphQL%E5%BA%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E9%9C%80%E6%B1%82%E5%8F%98%E5%8C%96--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>微信公众号：九极客 欢迎星标关注九极客，一起探讨技术与架构！ 大家的点赞、收藏和评论很重要，如文章对您有帮助还请转发支持下，谢谢！ 图注:大少公众号 随着应用程序和服务的不断发展，数据需求往往会经历多次变化。为了应对这种变化，传统的RESTful API可能需要频繁地进行版本更新，而Gra</description>
    </item>
    <item>
      <title>Spring Boot项目pom.xml配置详解 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E9%A1%B9%E7%9B%AEpom.xml%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 10:57:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/Spring-Boot%E9%A1%B9%E7%9B%AEpom.xml%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>🔔简介 pom.xml是Maven项目的核心配置文件，用于管理项目的依赖、插件、构建配置等。在Spring Boot项目中，pom.xml文件也扮演着重要的角色。在pom.xml文件中，可以配置项目的资源文件。 在Spring Boot的pom.xml文件中，通常会有一个标签文件，用于指</description>
    </item>
  </channel>
</rss>
