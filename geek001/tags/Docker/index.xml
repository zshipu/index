<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/Docker/</link>
    <description>Recent content in Docker on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 20 Aug 2024 02:55:44 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/Docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Faiss向量数据库Docker化部署与向量化执行教程 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240801/Faiss%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93Docker%E5%8C%96%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%90%91%E9%87%8F%E5%8C%96%E6%89%A7%E8%A1%8C%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 20 Aug 2024 02:55:44 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240801/Faiss%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93Docker%E5%8C%96%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%90%91%E9%87%8F%E5%8C%96%E6%89%A7%E8%A1%8C%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Faiss向量数据库使用教程：Docker化部署与向量化执行 一、前言 Faiss（Facebook AI Similarity Search）是由Facebook AI开发的一个高效相似性搜索库和工具集。它能够支持数十亿级别的向量存储，并在毫秒级别完成相似性搜索，为推荐系统、图像和文本检索等任务提供了强大的解</description>
    </item>
    <item>
      <title>使用Docker部署ELK Stack详细教程 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8Docker%E9%83%A8%E7%BD%B2ELK-Stack%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:32:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8Docker%E9%83%A8%E7%BD%B2ELK-Stack%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>被奇幻“催更” 最近有个读者，他叫“老王“，外号“茴香豆泡酒”，找我催更 ELK 的文章。 因之前我用的是软件安装 Logstash + Filebeat 的方式： 他想知道如何用容器化部署 ELK，于是我先写了一半，因为要写其他文章所以耽搁了。没想到过了几天后，老王说他已经部署好了，还写了篇文章，恐怖如斯啊！ 那可不行，我不能输给</description>
    </item>
    <item>
      <title>使用 ELK 技术栈进行 Docker 日志处理（第 1 部分） --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8-ELK-%E6%8A%80%E6%9C%AF%E6%A0%88%E8%BF%9B%E8%A1%8C-Docker-%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E7%AC%AC-1-%E9%83%A8%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:31:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/%E4%BD%BF%E7%94%A8-ELK-%E6%8A%80%E6%9C%AF%E6%A0%88%E8%BF%9B%E8%A1%8C-Docker-%E6%97%A5%E5%BF%97%E5%A4%84%E7%90%86%E7%AC%AC-1-%E9%83%A8%E5%88%86--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>清一下草稿箱库存 译自：Docker Logging with the ELK Stack - Part One 译者：临书 注：有删改 这篇文章是《使用 ELK 技术栈进行 Docker 日志处理》系列文章第 1 部分。（共两部分） 在本部分中，我将介绍如何配置从 Docker 容器到 ELK 技术栈（Elasticsearch，Logstash 和 Kibana）日志管道的基本步骤。 第 2 部分将描</description>
    </item>
    <item>
      <title>Docker部署Logstash并配置MySQL输入到Elasticsearch输出 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240507/Docker%E9%83%A8%E7%BD%B2Logstash%E5%B9%B6%E9%85%8D%E7%BD%AEMySQL%E8%BE%93%E5%85%A5%E5%88%B0Elasticsearch%E8%BE%93%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 07 May 2024 10:30:47 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240507/Docker%E9%83%A8%E7%BD%B2Logstash%E5%B9%B6%E9%85%8D%E7%BD%AEMySQL%E8%BE%93%E5%85%A5%E5%88%B0Elasticsearch%E8%BE%93%E5%87%BA--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.先pull镜像 1 docker pull logstash:7.6.2 1 2 mkdir -p /usr/share/logstash/conf.d mkdir /usr/share/logstash/log 1 vim logstash.yml 1 2 path.config: /usr/share/logstash/conf.d/*.conf path.logs: /usr/share/logstash/log vim test.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 input { stdin { } jdbc { jdbc_connection_string =&amp;gt; &amp;#34;jdbc:mysql://url:port/database?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;useLegacyDatetimeCode=false&amp;amp;allowPublicKeyRetrieval=true&amp;amp;serverTimezone=Asia/Shanghai&amp;#34; jdbc_driver_class =&amp;gt; &amp;#34;com.mysql.cj.jdbc.Driver&amp;#34; jdbc_user =&amp;gt; &amp;#34;root&amp;#34; jdbc_password =&amp;gt; &amp;#34;root&amp;#34; jdbc_paging_enabled =&amp;gt; &amp;#34;true&amp;#34; jdbc_page_size =&amp;gt; &amp;#34;50000&amp;#34; jdbc_default_timezone =&amp;gt; &amp;#34;Asia/Shanghai&amp;#34; jdbc_driver_library =&amp;gt; &amp;#34;/usr/share/logstash/conf.d/mysql-connector-java-8.0.28.jar&amp;#34; statement =&amp;gt; &amp;#34;SELECT * FROM table_name&amp;#34; schedule =&amp;gt; &amp;#34;* * * * *&amp;#34; lowercase_column_names =&amp;gt; false } } filter { date { match =&amp;gt; [&amp;#34;time_stamp&amp;#34;,&amp;#34;yyyy-MM-dd HH:mm:ss.SSS&amp;#34;] target =&amp;gt; &amp;#34;@time_stamp&amp;#34; } } output { elasticsearch { hosts =&amp;gt; [&amp;#34;http://url:9200&amp;#34;] index =&amp;gt; &amp;#34;your self index&amp;#34; document_id =&amp;gt;</description>
    </item>
    <item>
      <title>GraphQL介绍与Spring Boot GraphQL实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Wed, 24 Apr 2024 11:12:05 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240424/GraphQL%E4%BB%8B%E7%BB%8D%E4%B8%8ESpring-Boot-GraphQL%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>1.Graphql介绍 重试 错误原因 GraphQL 是一个用于 API 的查询语言，是一个使用基于类型系统来执行查询的服务端运行时（类型系统由你的数据定义）。GraphQL 并没有和任何特定数据库或者存储引擎绑定，而是依靠你现有的代码和数据支撑。 优势 GraphQL 速度快，并且比较稳定，GraphQL 的操作是在数据层面</description>
    </item>
  </channel>
</rss>
