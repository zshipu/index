<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API网关 on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek001/tags/API%E7%BD%91%E5%85%B3/</link>
    <description>Recent content in API网关 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 15 Jul 2024 06:27:52 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek001/tags/API%E7%BD%91%E5%85%B3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot 微服务中的 API 网关实现 --知识铺</title>
      <link>https://index.zshipu.com/geek001/post/20240710/Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84-API-%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Mon, 15 Jul 2024 06:27:52 +0000</pubDate>
      <guid>https://index.zshipu.com/geek001/post/20240710/Spring-Boot-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84-API-%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>Java Spring Boot 微服务架构中使用了哪些关键组件和设计模式？ 在 Java Spring Boot 微服务架构中，几个关键组件和设计模式对于构建可扩展、灵活且健壮的应用程序至关重要。以下是此类体系结构中使用的主要组件和设计模式： 关键部件 API 网关：充当所有客户端的单一入口点，将请求路由到适当的微服务并聚合结果。它简化了客户端交</description>
    </item>
  </channel>
</rss>
