<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MVC on 知识铺的博客</title>
    <link>https://index.zshipu.com/geek002/tags/MVC/</link>
    <description>Recent content in MVC on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 29 Oct 2024 08:17:06 +0000</lastBuildDate>
    <atom:link href="https://index.zshipu.com/geek002/tags/MVC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>原始MVC模式：Servlet拦截请求与任务分派 --知识铺</title>
      <link>https://index.zshipu.com/geek002/post/202410/%E5%8E%9F%E5%A7%8BMVC%E6%A8%A1%E5%BC%8FServlet%E6%8B%A6%E6%88%AA%E8%AF%B7%E6%B1%82%E4%B8%8E%E4%BB%BB%E5%8A%A1%E5%88%86%E6%B4%BE--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 29 Oct 2024 08:17:06 +0000</pubDate>
      <guid>https://index.zshipu.com/geek002/post/202410/%E5%8E%9F%E5%A7%8BMVC%E6%A8%A1%E5%BC%8FServlet%E6%8B%A6%E6%88%AA%E8%AF%B7%E6%B1%82%E4%B8%8E%E4%BB%BB%E5%8A%A1%E5%88%86%E6%B4%BE--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>hello, 我是郭屹。从这节课起，我们将进入一个新的部分：MVC（Model-View-Controller）模式的学习。 在前一章节中，我们已经实现了一个简易版本的IoC（Inversion of Control）容器。尽管我们的MiniSpring框架相对原生的Spring框架来说功能较为基础</description>
    </item>
    <item>
      <title>整合IoC和MVC在Web环境中启动IoC容器 --知识铺</title>
      <link>https://index.zshipu.com/geek002/post/202410/%E6%95%B4%E5%90%88IoC%E5%92%8CMVC%E5%9C%A8Web%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%90%AF%E5%8A%A8IoC%E5%AE%B9%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</link>
      <pubDate>Tue, 29 Oct 2024 08:09:06 +0000</pubDate>
      <guid>https://index.zshipu.com/geek002/post/202410/%E6%95%B4%E5%90%88IoC%E5%92%8CMVC%E5%9C%A8Web%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%90%AF%E5%8A%A8IoC%E5%AE%B9%E5%99%A8--%E7%9F%A5%E8%AF%86%E9%93%BA/</guid>
      <description>aaaaaaa a# 整合IoC和MVC：在Web环境中启动IoC容器 你好，我是郭屹。 通过上一节课的工作，我们已经初步实现了一个基础的MVC框架，并且引入了@RequestMapping注解以及对指定包进行全局扫描来简化XML配置。然而，这个MVC框架是独立运行的，并没有与之前创建的IoC（控制反</description>
    </item>
  </channel>
</rss>
